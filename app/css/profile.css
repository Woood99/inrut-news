/* stylelint-disable */
@font-face {
  font-family: "CoFoSans";
  src: url("../fonts/../fonts/CoFoSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "CoFoSans";
  src: url("../fonts/../fonts/CoFoSans-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/../fonts/Inter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/../fonts/Inter-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}
.card-small-info {
  display: flex;
}
.card-small-info__image {
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  border-radius: 12px;
}
.card-small-info__image img {
  border-radius: 12px;
  width: 48px;
  height: 48px;
  object-fit: contain;
  background-color: transparent;
}
.card-small-info__image::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: rgba(24, 26, 29, 0.0392156863);
  border-radius: 12px;
}
.card-small-info__info {
  margin-left: 16px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 4px;
}
.card-small-info__descr {
  font-size: var(--small-fz);
  color: var(--primaryTwo);
}
.card-small-info__result {
  margin-left: 60px;
  display: flex;
  align-items: center;
  align-self: flex-start;
  font-weight: 500;
}
.card-small-info__result img {
  margin-left: 8px;
}

.edit-profile__body {
  margin-top: 24px;
  background-color: var(--stand-bg);
  padding: 24px 0;
}
.edit-profile__row {
  padding: 32px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.edit-profile__row:not(:last-child) {
  margin-bottom: 12px;
}
@media (max-width: 1212px) {
  .edit-profile__row {
    padding: 24px 16px;
  }
}
.edit-profile__item:not(:last-child) {
  margin-bottom: 32px;
}
.edit-profile__subtitle {
  margin-bottom: 16px;
  display: flex;
  align-items: center;
  gap: 12px;
}
.edit-profile__icon {
  width: 16px;
  height: 16px;
}
.edit-profile__icon svg {
  width: 100%;
  height: 100%;
  stroke: var(--primaryTwo);
  fill: none;
}
.edit-profile__user {
  text-align: left;
  display: flex;
  align-items: center;
  gap: 32px;
  margin-bottom: 32px;
}
@media (max-width: 1212px) {
  .edit-profile__user {
    gap: 20px;
  }
}
.edit-profile__avatar {
  position: relative;
  overflow: hidden;
  cursor: pointer;
  --size: 110px;
  width: var(--size);
  height: var(--size);
  flex: 0 0 var(--size);
}
.edit-profile__avatar > div {
  position: absolute;
  z-index: 10;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translateY(100%);
  transition: transform 0.16s ease-in-out;
  color: var(--white);
  cursor: pointer;
}
.edit-profile__avatar > div input {
  width: 100%;
  height: 100%;
  opacity: 0;
  position: absolute;
  inset: 0;
  z-index: 11;
  cursor: pointer;
}
@media (min-width: 1213px) {
  .edit-profile__avatar:hover > div {
    transform: translateY(0);
  }
}
@media (max-width: 1212px) {
  .edit-profile__avatar {
    --size: 80px;
  }
}
.edit-profile__field {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 16px;
  grid-row-gap: 16px;
}
.edit-profile__field .input-primary {
  position: relative;
  overflow: visible;
}
.edit-profile__field .input-primary .secondary-tooltip {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 16px;
  z-index: 99;
}
.edit-profile__field .input-primary .secondary-tooltip svg {
  width: 18px;
  height: 18px;
  stroke: var(--primaryTwo);
  stroke-width: 1.2px;
  fill: none;
}
.edit-profile__field .input-primary .secondary-tooltip__content {
  width: max-content;
  max-width: 210px;
  text-align: left;
  left: auto;
  right: 0;
  bottom: 30px;
}
@media (max-width: 1212px) {
  .edit-profile__field {
    grid-template-columns: 100%;
  }
}
.edit-profile__edit {
  display: flex;
  align-items: center;
  gap: 8px;
  color: var(--blue);
}
.edit-profile__edit svg {
  stroke: currentColor;
  fill: none;
  stroke-width: 1.5px;
  width: 18px;
  height: 18px;
}
.edit-profile__action {
  display: flex;
  align-items: center;
  gap: 16px;
}
.edit-profile__bottom {
  display: flex;
  align-items: center;
  justify-content: end;
  gap: 16px;
}
@media (max-width: 768px) {
  .edit-profile__bottom {
    flex-direction: column;
    align-items: start;
    justify-content: start;
  }
  .edit-profile__bottom .btn {
    width: 100%;
  }
}
.edit-profile__or {
  margin: 16px auto;
  text-align: center;
  display: flex;
  align-items: center;
  flex-direction: row;
  max-width: 400px;
  gap: 10px;
}
.edit-profile__or span {
  flex-grow: 1;
  background-color: var(--primary200);
  height: 1px;
}
@media (max-width: 1212px) {
  .edit-profile .edit-profile-email {
    order: -1;
  }
}

.create-profile .edit-profile__fields {
  max-width: 400px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin: 0 auto;
}

.authorization-phone__container {
  display: flex;
  align-items: start;
  gap: 24px;
}
.authorization-phone__label:not(:first-child) {
  margin-top: 16px;
}
.authorization-phone__label .input-text__label {
  background-color: var(--white);
  height: 60px;
  font-size: 16px;
}
.authorization-phone__btn {
  margin-top: 16px;
  width: 100%;
  height: 60px;
  font-size: 16px;
}
.authorization-phone__link {
  margin-top: 16px;
  width: max-content;
  color: var(--blue);
}
.authorization-phone__right {
  display: flex;
  flex-grow: 1;
  gap: 24px;
}
.authorization-phone__in {
  margin-top: 16px;
  width: 100%;
}
.authorization-phone__text {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
}
.authorization-phone__text span {
  display: flex;
  flex-grow: 1;
  background-color: var(--primary200);
  width: 1px;
  height: 71px;
}
.authorization-phone__text p {
  height: 40px;
  background-color: transparent;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
}
.authorization-phone__list {
  display: flex;
  gap: 16px;
  flex-grow: 1;
}
.authorization-phone__list .col {
  display: flex;
  flex-direction: column;
  gap: 16px;
  flex-grow: 1;
  max-width: 290px;
}
.authorization-phone__list .btn {
  width: 100%;
  padding: 0 32px;
}

.present__body {
  margin-top: 24px;
  background-color: var(--stand-bg);
  padding: 24px 0;
}
.present__content {
  display: grid;
  justify-content: space-between;
  grid-template-columns: 1fr 350px;
  grid-column-gap: 12px;
}
@media (max-width: 1212px) {
  .present__content {
    margin-top: 8px;
    grid-template-columns: 1fr;
  }
}
.present__col {
  box-shadow: var(--shadow-primary);
  background-color: var(--white);
  padding: 32px 24px;
  border-radius: 16px;
}
.present .tabs-primary__inner {
  margin-top: 0;
}
.present .tabs-primary__container {
  margin-top: 0;
  background-color: transparent;
  padding: 20px 0 0;
}
.present__item:not(:first-child) {
  padding-top: 8px;
}

.present-item__date {
  padding: 12px 0;
  font-size: var(--default-fz);
  color: var(--primaryTwo);
}
.present-item__card {
  padding: 12px 0;
}
.present-item__card:not(:last-child) {
  margin-bottom: 12px;
  border-bottom: 1px solid var(--primary100);
}

.present-sidebar {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 32px 24px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}
.present-sidebar._sticky {
  position: sticky;
  top: 16px;
  width: 100%;
}
.present-sidebar__items {
  margin-top: 24px;
}
.present-sidebar__item {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.present-sidebar__item:not(:last-child) {
  border-bottom: 1px solid var(--primary100);
  margin-bottom: 12px;
  padding-bottom: 12px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
