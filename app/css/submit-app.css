@charset "UTF-8";
/* stylelint-disable */
@font-face {
  font-family: "CoFoSans";
  src: url("../fonts/../fonts/CoFoSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "CoFoSans";
  src: url("../fonts/../fonts/CoFoSans-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/../fonts/Inter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/../fonts/Inter-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}
.search-area__title {
  text-align: left;
  padding: 0 16px;
  margin-left: auto;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
@media (max-width: 1212px) {
  .search-area__title {
    display: none;
  }
}
.search-area__container {
  margin-top: 0;
}
.search-area .popup-primary__close {
  transform: translate(0);
  margin-top: 0;
  width: 25px;
  height: 25px;
  margin-right: 16px;
  margin-left: 8px;
}
@media (max-width: 1212px) {
  .search-area .popup-primary__close {
    width: auto;
    height: auto;
  }
}
.search-area .tabs-primary__inner {
  margin-top: 0;
}
@media (max-width: 1212px) {
  .search-area .tabs-primary__inner {
    padding-top: 0;
  }
}
.search-area .tabs-primary__content {
  margin-top: 0;
}
.search-area .tabs-primary__container {
  margin-top: 0;
  background-color: transparent;
  border-radius: 0;
  padding: 0;
}
@media (max-width: 1212px) {
  .search-area .tabs-primary {
    border-radius: 0;
    padding: 0;
  }
}
.search-area__items {
  margin-top: 32px;
  padding-bottom: 46px;
  grid-column: 1/2;
}
.search-area__top {
  grid-column: 1/2;
  grid-row: 1/2;
  align-items: center;
  gap: 8px;
  text-align: left;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(230px, auto));
}
.search-area__top .select-secondary:nth-child(2) .choices__list--single {
  padding-left: 75px;
}
.search-area__top .select-secondary:nth-child(3) .choices__list--single {
  padding-left: 60px;
}
.search-area .dragscroll {
  overflow: auto;
  width: 100%;
  height: 100%;
  scrollbar-width: none;
}
.search-area .dragscroll::-webkit-scrollbar {
  display: none;
}
.search-area__right {
  grid-column: 1/2;
  max-height: calc(var(--vh) - 190px);
  overflow-y: auto;
  padding-left: 16px;
}
.search-area__right > .simplebar-vertical {
  right: auto;
  left: 4px;
}
.search-area__right .search-select-one__dropdown {
  min-width: auto;
}
.search-area__right .simplebar-horizontal {
  display: none;
}
.search-area__left {
  grid-row: 1/3;
  grid-column: 2/3;
  position: relative;
  width: 100%;
  height: 100%;
}
.search-area__metro {
  max-height: var(--vh);
  width: 100%;
  overflow: auto;
  padding-left: 20px;
  margin-left: -20px;
  height: 100%;
}
.search-area__metro._sticky {
  position: sticky;
  top: 0;
  width: calc(100% + 20px);
}
.search-area__resize {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 50%;
  cursor: ew-resize;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 40px;
  width: 40px;
  z-index: 99;
}
.search-area__resize svg {
  width: 25px;
  height: 25px;
  fill: var(--dark);
}
@media (min-width: 1213px) {
  .search-area__resize:hover {
    box-shadow: var(--shadow-black-big);
  }
}
.search-area__controls {
  margin-bottom: 16px;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}
.search-area__control {
  height: 25px;
  padding: 0 16px;
  font-size: var(--very-small-fz);
  line-height: var(--very-small-lh);
}
.search-area__control:not(:last-child) {
  margin-right: 16px;
}
.search-area__item {
  text-align: left;
  padding: 24px 0;
}
.search-area__item:first-child {
  padding-top: 0;
}
.search-area__item:last-child {
  padding-bottom: 0;
}
.search-area__item:not(:last-child) {
  border-bottom: 1px solid var(--primary200);
}
.search-area__item .spollers__title {
  display: flex;
  align-items: center;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--primaryTwo);
  font-weight: 500;
  transition: color 0.32s ease-in-out;
}
.search-area__item .spollers__title > div {
  width: 26px;
  height: 16px;
  display: block;
  margin-right: 12px;
  position: relative;
}
.search-area__item .spollers__title > div span {
  color: var(--white);
  font-size: 9px;
  line-height: 1;
  position: absolute;
  left: 0;
  top: 1px;
  background-color: transparent;
  height: 17px;
  width: 28px;
  padding-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.search-area__item .spollers__title > div svg {
  width: 28px;
  height: 17px;
  fill: orange;
}
.search-area__item .spollers__title > svg {
  width: 20px;
  height: 20px;
  fill: currentColor;
  margin-left: 8px;
  transition: transform 0.16s ease-in-out;
}
@media (min-width: 1213px) {
  .search-area__item .spollers__title:hover {
    color: var(--blue);
  }
}
.search-area__item .spollers__title.focus-visible {
  color: var(--blue);
}
.search-area__item .spollers__title._spoller-active > svg {
  transform: rotate(-180deg);
}
.search-area__item[data-search-area-metro="1"] .spollers__title > div svg {
  fill: #E4402D;
}
.search-area__item[data-search-area-metro="1"] .checkbox-secondary__circle {
  background-color: #E4402D;
}
.search-area__item[data-search-area-metro="2"] .spollers__title > div svg {
  fill: #4dbe52;
}
.search-area__item[data-search-area-metro="2"] .checkbox-secondary__circle {
  background-color: #4dbe52;
}
.search-area__item[data-search-area-metro="3"] .spollers__title > div svg {
  fill: #2c75c4;
}
.search-area__item[data-search-area-metro="3"] .checkbox-secondary__circle {
  background-color: #2c75c4;
}
.search-area__item[data-search-area-metro="4"] .spollers__title > div svg {
  fill: #4fc6f4;
}
.search-area__item[data-search-area-metro="4"] .checkbox-secondary__circle {
  background-color: #4fc6f4;
}
.search-area__item[data-search-area-metro="5"] .spollers__title > div svg {
  fill: #994735;
}
.search-area__item[data-search-area-metro="5"] .checkbox-secondary__circle {
  background-color: #994735;
}
.search-area__item[data-search-area-metro="6"] .spollers__title > div svg {
  fill: #f47216;
}
.search-area__item[data-search-area-metro="6"] .checkbox-secondary__circle {
  background-color: #f47216;
}
.search-area__item[data-search-area-metro="7"] .spollers__title > div svg {
  fill: #89339e;
}
.search-area__item[data-search-area-metro="7"] .checkbox-secondary__circle {
  background-color: #89339e;
}
.search-area__item[data-search-area-metro="8"] .spollers__title > div svg {
  fill: #fddd04;
}
.search-area__item[data-search-area-metro="8"] .checkbox-secondary__circle {
  background-color: #fddd04;
}
.search-area__item[data-search-area-metro="8A"] .spollers__title > div svg {
  fill: #fddd04;
}
.search-area__item[data-search-area-metro="8A"] .checkbox-secondary__circle {
  background-color: #fddd04;
}
.search-area__item[data-search-area-metro="9"] .spollers__title > div svg {
  fill: #9f9f9f;
}
.search-area__item[data-search-area-metro="9"] .checkbox-secondary__circle {
  background-color: #9f9f9f;
}
.search-area__item[data-search-area-metro="10"] .spollers__title > div svg {
  fill: #a6d82b;
}
.search-area__item[data-search-area-metro="10"] .checkbox-secondary__circle {
  background-color: #a6d82b;
}
.search-area__item[data-search-area-metro="11"] .spollers__title > div svg {
  fill: #80d4c9;
}
.search-area__item[data-search-area-metro="11"] .checkbox-secondary__circle {
  background-color: #80d4c9;
}
.search-area__item[data-search-area-metro="12"] .spollers__title > div svg {
  fill: #b0bfe7;
}
.search-area__item[data-search-area-metro="12"] .checkbox-secondary__circle {
  background-color: #b0bfe7;
}
.search-area__item[data-search-area-metro="14"] .spollers__title > div svg {
  fill: rgb(255, 168, 175);
}
.search-area__item[data-search-area-metro="14"] .checkbox-secondary__circle {
  background-color: rgb(255, 168, 175);
}
.search-area__item[data-search-area-metro="15"] .spollers__title > div svg {
  fill: #f466ba;
}
.search-area__item[data-search-area-metro="15"] .checkbox-secondary__circle {
  background-color: #f466ba;
}
.search-area__item[data-search-area-metro="16"] .spollers__title > div svg {
  fill: #190304;
}
.search-area__item[data-search-area-metro="16"] .checkbox-secondary__circle {
  background-color: #190304;
}
.search-area__item[data-search-area-metro="17"] .spollers__title > div svg {
  fill: #d97863;
}
.search-area__item[data-search-area-metro="17"] .checkbox-secondary__circle {
  background-color: #d97863;
}
.search-area__item[data-search-area-metro=d1] .spollers__title > div svg {
  fill: #f89c0e;
}
.search-area__item[data-search-area-metro=d1] .checkbox-secondary__circle {
  background-color: #f89c0e;
}
.search-area__item[data-search-area-metro=d2] .spollers__title > div svg {
  fill: #ef2a8a;
}
.search-area__item[data-search-area-metro=d2] .checkbox-secondary__circle {
  background-color: #ef2a8a;
}
.search-area__item[data-search-area-metro=d3] .spollers__title > div svg {
  fill: #f1511b;
}
.search-area__item[data-search-area-metro=d3] .checkbox-secondary__circle {
  background-color: #f1511b;
}
.search-area__item[data-search-area-metro=d4] .spollers__title > div svg {
  fill: #4dc083;
}
.search-area__item[data-search-area-metro=d4] .checkbox-secondary__circle {
  background-color: #4dc083;
}
.search-area__item[data-search-area-metro=d5] .spollers__title > div svg {
  fill: #66c430;
}
.search-area__item[data-search-area-metro=d5] .checkbox-secondary__circle {
  background-color: #66c430;
}
.search-area .spollers__body {
  margin-top: 16px;
}
.search-area__list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  grid-column-gap: 24px;
  grid-row-gap: 24px;
  justify-content: start;
  align-items: start;
}
.search-area__list .checkbox-secondary__label {
  justify-content: start;
}
.search-area__list .checkbox-secondary__text {
  margin-left: 8px;
  display: flex;
  align-items: center;
}
.search-area__list .checkbox-secondary__circle {
  width: 8px;
  height: 8px;
  display: block;
  background-color: orange;
  border-radius: 50%;
  margin-right: 8px;
}
.search-area .row {
  margin-bottom: 0px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.search-area__form {
  position: relative;
  display: grid;
  grid-template-columns: 360px 1fr;
  grid-column-gap: 24px;
  padding: 0;
}
.search-area__scale {
  position: absolute;
  top: 20px;
  right: 20px;
  z-index: 99;
  border-radius: 16px;
  background-color: var(--white);
  box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(93, 112, 134, 0.1);
  overflow: hidden;
}
.search-area__scale-btn {
  background-color: var(--white);
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
.search-area__scale-btn svg {
  width: 18px;
  height: 18px;
  stroke: var(--black);
  stroke-width: 2px;
}
.search-area__scale-btn--minus::before {
  content: "";
  width: 40%;
  height: 1px;
  background-color: rgba(0, 0, 0, 0.05);
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}
.search-area__nav-left {
  width: 100%;
  max-height: 81px;
}
.search-area__bottom {
  position: fixed;
  z-index: 101;
  bottom: 0;
  right: 0;
  left: 0;
  background-color: var(--white);
  box-shadow: 0px -2px 1px rgba(0, 0, 0, 0.1);
  padding: 12px 0;
  height: 105px;
}
.search-area__bottom > div {
  display: flex;
  justify-content: space-between;
  padding: 0 16px;
}
.search-area__bottom .simplebar-primary {
  width: 100%;
  max-width: 100%;
  height: 100%;
}
.search-area__bottom .simplebar-primary .simplebar-track.simplebar-vertical {
  top: 0;
  height: 100%;
}
.search-area__bottom .simplebar-primary .simplebar-track.simplebar-vertical .simplebar-scrollbar {
  max-height: 100%;
}
.search-area__nav {
  display: flex;
  flex-direction: column;
  gap: 12px;
}
.search-area__nav-item {
  display: none;
  align-items: start;
}
.search-area__nav-item > div:nth-child(1) {
  display: flex;
  align-items: center;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  color: var(--primaryTwo);
  font-weight: 500;
  white-space: nowrap;
}
.search-area__nav-item > div:nth-child(1) > div {
  width: 25px;
  height: 15px;
  display: block;
  margin-right: 6px;
  position: relative;
}
.search-area__nav-item > div:nth-child(1) > div span {
  color: var(--white);
  font-size: 8px;
  line-height: 1;
  position: absolute;
  left: 0;
  top: 0px;
  background-color: transparent;
  width: 25px;
  height: 15px;
  padding-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.search-area__nav-item > div:nth-child(1) > div svg {
  width: 25px;
  height: 15px;
}
.search-area__nav-item > div:nth-child(2) {
  margin-top: -1px;
  margin-left: 8px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;
}
.search-area__nav-item > div:nth-child(2) div {
  display: flex;
  align-items: center;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
}
.search-area__nav-item > div:nth-child(2) div button {
  margin-left: 4px;
  margin-top: 2px;
}
.search-area__nav-item > div:nth-child(2) div button svg {
  width: 12px;
  height: 12px;
}
.search-area__nav-item[data-search-area-metro-nav="1"] svg {
  fill: #E4402D;
}
.search-area__nav-item[data-search-area-metro-nav="2"] svg {
  fill: #4dbe52;
}
.search-area__nav-item[data-search-area-metro-nav="3"] svg {
  fill: #2c75c4;
}
.search-area__nav-item[data-search-area-metro-nav="4"] svg {
  fill: #4fc6f4;
}
.search-area__nav-item[data-search-area-metro-nav="5"] svg {
  fill: #994735;
}
.search-area__nav-item[data-search-area-metro-nav="6"] svg {
  fill: #f47216;
}
.search-area__nav-item[data-search-area-metro-nav="7"] svg {
  fill: #89339e;
}
.search-area__nav-item[data-search-area-metro-nav="8"] svg {
  fill: #fddd04;
}
.search-area__nav-item[data-search-area-metro-nav="8A"] svg {
  fill: #fddd04;
}
.search-area__nav-item[data-search-area-metro-nav="9"] svg {
  fill: #9f9f9f;
}
.search-area__nav-item[data-search-area-metro-nav="10"] svg {
  fill: #a6d82b;
}
.search-area__nav-item[data-search-area-metro-nav="11"] svg {
  fill: #80d4c9;
}
.search-area__nav-item[data-search-area-metro-nav="12"] svg {
  fill: #b0bfe7;
}
.search-area__nav-item[data-search-area-metro-nav="14"] svg {
  fill: rgb(255, 168, 175);
}
.search-area__nav-item[data-search-area-metro-nav="15"] svg {
  fill: #f466ba;
}
.search-area__nav-item[data-search-area-metro-nav="16"] svg {
  fill: #190304;
}
.search-area__nav-item[data-search-area-metro-nav="17"] svg {
  fill: #d97863;
}
.search-area__nav-item[data-search-area-metro-nav=d1] svg {
  fill: #f89c0e;
}
.search-area__nav-item[data-search-area-metro-nav=d2] svg {
  fill: #ef2a8a;
}
.search-area__nav-item[data-search-area-metro-nav=d3] svg {
  fill: #f1511b;
}
.search-area__nav-item[data-search-area-metro-nav=d4] svg {
  fill: #4dc083;
}
.search-area__nav-item[data-search-area-metro-nav=d5] svg {
  fill: #66c430;
}
.search-area__nav-item._active {
  display: flex;
}
.search-area__nav-counter {
  display: none;
  margin-left: 8px;
  font-size: var(--very-small-fz);
  line-height: 1;
  background-color: var(--blue);
  padding: 4px 8px;
  color: var(--white);
  border-radius: 8px;
  align-items: center;
}
.search-area__nav-counter span {
  margin-left: 4px;
}
.search-area__nav-counter._active {
  display: flex;
}
.search-area__btns {
  display: flex;
  flex-direction: column;
  margin-left: 32px;
}
.search-area__go {
  padding: 0 32px;
  height: 37.5px;
}
.search-area__clear {
  margin-top: 6px;
  padding: 0 32px;
  height: 37.5px;
  width: 100%;
}
.search-area__map.map-draw {
  height: calc(var(--vh) - 72px);
}
@media (max-width: 1212px) {
  .search-area__map.map-draw {
    height: calc(var(--vh) - 55px);
  }
}
.search-area__map-btn {
  position: absolute;
  bottom: 20px;
  right: 15px;
  z-index: 2;
}
@media (max-width: 1212px) {
  .search-area {
    padding: 0;
  }
}

.metro-map .search-area__container .row {
  margin-bottom: 24px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.layouts__item {
  background-color: var(--white);
  border-radius: 12px;
}
.layouts__item .room-info {
  box-shadow: none;
  border: none;
  background-color: transparent;
  border-radius: 0;
  padding-left: 23px;
  padding-right: 23px;
}
@media (max-width: 1212px) {
  .layouts__item .room-info {
    padding-left: 16px;
    padding-right: 16px;
  }
}
.layouts__item:not(:last-child) {
  margin-bottom: 12px;
}
.layouts__item-btn {
  width: 100%;
  border-radius: 12px;
  box-shadow: var(--shadow-primary);
  border: 1px solid #EBF1FB;
  transition: background-color 0.32s ease-in-out, box-shadow 0.32s ease-in-out, transform 0.32s ease-in-out;
}
.layouts__item-btn._spoller-active {
  background-color: var(--stand-bg);
}
.layouts__item-btn._spoller-active .room-info__check svg {
  transform: rotate(-180deg);
}
@media (min-width: 1213px) {
  .layouts__item-btn:hover {
    background-color: var(--stand-bg);
    box-shadow: var(--shadow-primary);
    transform: translateY(-3px);
  }
}
.layouts__item-body {
  padding: 16px 0 0;
}
@media (max-width: 1212px) {
  .layouts__item-body {
    padding: 0 0 24px;
    margin-top: 16px;
  }
}

.room-body__controls {
  margin-bottom: 24px;
  display: flex;
  align-items: center;
  justify-content: end;
}
@media (max-width: 1212px) {
  .room-body__controls {
    padding: 0 16px;
  }
}
@media (max-width: 768px) {
  .room-body__controls {
    display: none;
  }
}
.room-body .nav-arrow-secondary:not(:last-child) {
  margin-right: 8px;
}
.room-body__pagination {
  margin: 0 16px;
}
.room-body__nav .nav-arrow-primary__wrapper {
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.35), 0 2px 8px rgba(0, 0, 0, 0.2);
}
.room-body__items {
  padding: 15px;
  margin: -15px;
}
.room-body__items .swiper-wrapper {
  align-items: stretch;
}
.room-body__items .swiper-slide {
  height: auto;
  animation-name: leftRight;
  animation-duration: 0.45s;
  animation-delay: 0.5s;
}
.room-body__items .card-scheme {
  box-sizing: border-box;
  height: 100%;
}
.room-body__items .card-scheme__container {
  width: 100%;
}
.room-body__items .card-scheme__image {
  width: 100%;
}
@media (max-width: 1212px) {
  .room-body__items {
    margin: 0 -16px;
    padding: 0 16px;
  }
}
.room-body__container {
  margin-top: 24px;
}
.room-body__list .room-info-card {
  border-bottom: 1px solid var(--primary100);
}
.room-body__list .room-info-card:first-child {
  border-top: 1px solid var(--primary100);
}
.room-body__nav {
  --size: 40px;
}
.room-body__nav.nav-arrow-primary--next {
  right: 3px;
}
.room-body__nav.nav-arrow-primary--prev {
  left: 3px;
}
.room-body__nav .nav-arrow-primary__wrapper {
  background-color: #ebf7ff;
}
@media (max-width: 1212px) {
  .room-body__nav {
    display: none;
  }
}
.room-body__next {
  margin-top: 24px;
  width: 100%;
}
@media (max-width: 1212px) {
  .room-body__next {
    margin: 24px auto 0;
    width: calc(100% - 32px);
  }
}
.room-body__pagination-bottom {
  margin-top: 24px;
  padding-bottom: 8px;
  width: 100%;
  justify-content: center;
}
@media (max-width: 768px) {
  .room-body__pagination-bottom {
    display: none;
  }
}

.room-info-card {
  display: grid;
  align-items: center;
  grid-template-columns: 93px max-content 1fr max-content max-content;
  grid-column-gap: 24px;
  padding: 16px;
}
.room-info-card .card-price .secondary-tooltip {
  margin-left: 0;
}
.room-info-card .user-cashback {
  background-color: transparent;
  padding: 0;
  width: max-content;
  border-radius: 0;
}
.room-info-card__image {
  width: 85px;
  height: 85px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  border-radius: 12px;
}
.room-info-card__image img {
  border-radius: 12px;
  width: 75px;
  height: 75px;
  object-fit: contain;
  background-color: transparent;
}
@media (max-width: 1212px) {
  .room-info-card__image img {
    width: 70px;
    height: 70px;
  }
}
.room-info-card__image::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: rgba(24, 26, 29, 0.0392156863);
  border-radius: 12px;
}
@media (max-width: 1212px) {
  .room-info-card__image {
    width: 80px;
    height: 80px;
    grid-row: 1/3;
    align-self: start;
  }
  .room-info-card__name-term {
    grid-column: 2/3;
  }
}
.room-info-card__title {
  transition: color 0.32s ease-in-out;
  font-weight: 500;
}
.room-info-card__term {
  display: block;
  font-size: var(--default-fz);
  line-height: var(--little-small-lh);
  color: var(--primary600);
}
.room-info-card__frame {
  display: block;
  font-size: var(--default-fz);
  line-height: var(--little-small-lh);
  color: var(--primary600);
}
.room-info-card__price {
  display: flex;
  flex-direction: column;
  transition: color 0.32s ease-in-out;
}
@media (max-width: 1212px) {
  .room-info-card__price {
    margin-top: 8px;
    grid-column: 2/3;
  }
}
.room-info-card__price-old {
  display: flex;
  align-items: center;
  color: var(--primaryTwo);
}
.room-info-card__price-old span:nth-child(1) {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.room-info-card__price-old span:nth-child(1) span {
  position: relative;
}
.room-info-card__price-old span:nth-child(1) span::before {
  content: "";
  border-bottom: 1px solid currentColor;
  position: absolute;
  width: 100%;
  height: 50%;
  transform: rotate(-5deg);
}
.room-info-card__price-old span:nth-child(2) {
  margin-left: 5px;
  padding: 3px 10px;
  color: var(--green);
  background: rgba(36, 202, 142, 0.1);
  border-radius: 8px;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
}
.room-info-card__row {
  display: flex;
  align-items: center;
  gap: 12px;
}
.room-info-card__add-tags {
  justify-self: end;
}
.room-info-card__tags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}
.room-info-card__tags > span {
  background-color: var(--primary100);
  border-radius: 12px;
  color: var(--dark);
  height: 24px;
  padding: 0 12px;
  font-size: 11px;
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  font-weight: 500;
}
.room-info-card__tags .secondary-tooltip {
  width: auto;
  height: auto;
}
.room-info-card__tags .secondary-tooltip__btn, .room-info-card__tags .secondary-tooltip__content > span {
  background-color: var(--primary100);
  border-radius: 12px;
  color: var(--dark);
  height: 24px;
  padding: 0 20px;
  font-size: 11px;
  line-height: 1;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  font-weight: 500;
}
.room-info-card__tags .secondary-tooltip__content {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  left: -50%;
  transform: translateX(calc(-50% - 8px));
  top: 28px;
  max-width: 320px;
  width: max-content;
  height: max-content;
  gap: 8px;
}
.room-info-card__present {
  width: 25px;
  height: 25px;
}
.room-info-card__present .secondary-tooltip__btn {
  width: 25px;
  height: 25px;
}
.room-info-card__present .secondary-tooltip__content {
  width: max-content;
  max-width: 250px;
}
.room-info-card__col {
  display: flex;
  flex-direction: column;
  gap: 4px;
}
.room-info-card__col > span {
  color: var(--primaryTwo);
}
@media (min-width: 1213px) {
  .room-info-card:hover .room-info-card__title {
    color: var(--blue);
  }
  .room-info-card:hover .room-info-card__price {
    color: var(--blue);
  }
}
@media (max-width: 1212px) {
  .room-info-card {
    padding: 24px 16px;
    grid-template-columns: 88px 1fr;
    grid-column-gap: 8px;
  }
}
@media (max-width: 576px) {
  .room-info-card {
    padding: 16px;
  }
}

.additionally {
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  background-color: var(--white);
  padding: 32px;
}
.additionally__title {
  margin-bottom: 8px;
  display: flex;
  align-items: center;
  gap: 12px;
}
.additionally__title .secondary-tooltip__content {
  width: max-content;
  max-width: 300px;
  font-weight: 400;
}
.additionally__descr {
  color: var(--primaryTwo);
  margin-bottom: 20px;
}
.additionally__descr span {
  color: var(--dark);
  font-weight: 500;
  display: inline-block;
  margin-left: 5px;
}
.additionally__items {
  display: grid;
  grid-template-columns: 100%;
  grid-column-gap: 12px;
  grid-row-gap: 12px;
  margin-bottom: 16px;
}
.additionally__more {
  display: flex;
  align-items: center;
  margin-top: 20px;
  color: var(--blue);
  font-size: var(--default-fz);
  line-height: 1;
  font-weight: 500;
}
.additionally__more svg {
  margin-left: 5px;
  width: 20px;
  height: 20px;
  fill: currentColor;
  transition: transform 0.16s ease-in-out;
}
.additionally__more._active svg {
  transform: rotate(-180deg);
}
.additionally__form {
  margin-top: 32px;
  display: flex;
  align-items: center;
  gap: 8px;
}
.additionally__btn {
  margin-top: 32px;
  width: 100%;
}
.additionally._clear {
  box-shadow: none;
  border-radius: 0;
  background-color: transparent;
  padding: 0;
}

.additionally-calc {
  margin-top: 16px;
  width: 100%;
}
.additionally-calc .card-checkbox {
  border-radius: 0;
  padding: 0;
  border: none;
}
.additionally-calc .card-checkbox:not(:last-child) {
  margin-bottom: 5px;
}
.additionally-calc .user-info {
  display: flex;
  flex-direction: column;
}
.additionally-calc .user-info__name {
  align-self: flex-start;
  white-space: normal;
  color: var(--gray);
  font-weight: 400;
}
.additionally-calc__list {
  margin-top: 12px;
  max-height: 125px;
}
.additionally-calc .simplebar-track.simplebar-vertical {
  margin-right: -10px;
}

@media (max-width: 1212px) {
  .submit-app__title {
    padding: 0 16px;
  }
}
.submit-app__body {
  margin-top: 8px;
  background-color: var(--stand-bg);
  padding: 24px 0;
}
@media (max-width: 1212px) {
  .submit-app__body {
    margin-top: 0;
    padding: 78px 0 24px;
  }
}
.submit-app__container {
  border-radius: 16px;
}
@media (max-width: 1212px) {
  .submit-app__container {
    margin-top: 16px;
  }
  .submit-app__container.container {
    padding: 0;
  }
}
.submit-app__row {
  padding: 24px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.submit-app__row:not(:last-child) {
  margin-bottom: 16px;
}
@media (max-width: 1212px) {
  .submit-app__row {
    padding: 16px;
    border-radius: 12px;
  }
  .submit-app__row:not(:last-child) {
    margin-bottom: 12px;
  }
}
.submit-app__row-title {
  margin-bottom: 16px;
}
.submit-app__btn {
  margin-top: 24px;
  padding: 0 81px;
  width: 100%;
}
@media (max-width: 1212px) {
  .submit-app__btn {
    margin-right: 16px;
  }
}
@media (max-width: 768px) {
  .submit-app__btn {
    width: calc(100% - 32px);
    margin: 24px auto 0;
    padding: 0 20px;
  }
}
.submit-app__banner {
  margin-bottom: 16px;
}
@media (max-width: 1212px) {
  .submit-app {
    background-color: var(--stand-bg);
  }
}

.submit-app-options__descr {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  margin-bottom: 24px;
  display: block;
}
.submit-app-options__choice:not(:last-child) {
  margin-bottom: 24px;
}
.submit-app-options__row {
  display: grid;
  justify-content: start;
  align-items: center;
  grid-column-gap: 8px;
}
.submit-app-options__row--1 {
  grid-template-columns: 28.7102473498% 24.5583038869% 33.1272084806%;
}
.submit-app-options__row--2 {
  grid-template-columns: 33.1272084806% 33.1272084806% 26.5017667845%;
}
.submit-app-options__row--3 {
  grid-template-columns: 39.7526501767% 39.7526501767%;
}
.submit-app-options__row--4 {
  grid-template-columns: 30.9187279152%;
}
.submit-app-options__row:not(:last-child) {
  margin-bottom: 16px;
}
@media (max-width: 1212px) {
  .submit-app-options__row {
    grid-row-gap: 16px;
    align-items: center;
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 768px) {
  .submit-app-options__row {
    grid-template-columns: 1fr;
  }
}
.submit-app-options__item:not(:last-child) {
  margin-bottom: 32px;
}
.submit-app-options__textarea {
  --height: 165px;
}
.submit-app-options__import {
  margin-top: 24px;
}
.submit-app-options__offers {
  margin-top: 48px;
}
.submit-app-options__tags {
  margin-top: 24px;
  padding-top: 24px;
  border-top: 1px solid var(--primary100);
}
.submit-app-options__item--price .filter-dropdown__dropdown {
  min-width: 100%;
}

.submit-price-proper .field-select__name {
  --width: 325px;
}
.submit-price-proper .submit-app-options__row {
  margin-bottom: 0;
  align-items: start;
}
.submit-price-proper .submit-app-options__row:not(:nth-child(2)) {
  margin-top: 24px;
}
@media (max-width: 1212px) {
  .submit-price-proper .submit-app-options__row:last-child {
    grid-template-columns: 1fr;
  }
}

.submit-app-import__textarea {
  --height: 165px;
}

.submit-app-offers__list {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 16px;
  grid-row-gap: 16px;
}
@media (max-width: 1212px) {
  .submit-app-offers__list {
    grid-template-columns: repeat(3, 1fr);
  }
}
@media (max-width: 768px) {
  .submit-app-offers__list {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 576px) {
  .submit-app-offers__list {
    grid-template-columns: 1fr;
  }
}
.submit-app-offers__btn {
  margin-top: 16px;
  color: var(--blue);
  display: flex;
  align-items: center;
}
.submit-app-offers__btn span {
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
}
.submit-app-offers__btn svg {
  width: 20px;
  height: 17px;
  fill: currentColor;
  margin-left: 8px;
  transition: transform 0.32s ease-in-out;
}
.submit-app-offers__btn.focus-visible {
  color: var(--primary600);
}
.submit-app-offers .checkbox-secondary {
  margin-top: 24px;
}
.submit-app-offers .checkbox-secondary__label {
  justify-content: start;
}
.submit-app-offers._active .submit-app-offers__btn svg {
  transform: rotate(180deg);
}

.submit-app-maps > .row {
  margin-top: 24px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 8px;
}
@media (max-width: 1212px) {
  .submit-app-maps > .row {
    grid-template-columns: repeat(2, 1fr);
  }
}
@media (max-width: 768px) {
  .submit-app-maps > .row {
    grid-template-columns: 100%;
    grid-row-gap: 16px;
  }
}
.submit-app-maps__descr {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
.submit-app-maps__map {
  margin-top: 24px;
}
.submit-app-maps__map .map-draw__btns {
  top: auto;
  bottom: 20px;
}
.submit-app-maps__checkbox {
  margin-top: 24px;
}
.submit-app-maps__checkbox .checkbox-secondary__label {
  justify-content: start;
}
@media (max-width: 1212px) {
  .submit-app-maps__checkbox {
    margin-top: 16px;
  }
}
.object__body {
  background-color: var(--stand-bg);
}
.object .object-body .object-data__price {
  margin-top: 0;
}
.object .bid-user__viewing {
  display: none;
}
@media (max-width: 1212px) {
  .object {
    padding-top: 0;
  }
}

.object-data-order {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 12px;
  grid-row-gap: 12px;
}
.object-data-order .card-f__descr {
  flex-grow: 1;
}
.object-data-order.row-1 {
  grid-template-columns: 100%;
}

.object-body__slider {
  padding: 10px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
@media (max-width: 1212px) {
  .object-body__slider {
    padding: 0;
    background-color: var(--white);
  }
}
.object-body__container {
  margin-top: 8px;
  padding-top: 16px;
  padding-bottom: 16px;
}
@media (max-width: 1212px) {
  .object-body__container {
    margin-top: 0;
    padding: 62px 0 16px;
  }
}
.object-body__viewing {
  margin-top: 12px;
}
.object-body__wrapper {
  margin-top: 12px;
  display: grid;
  justify-content: space-between;
  grid-template-columns: 1fr 350px;
  grid-column-gap: 12px;
}
@media (max-width: 1212px) {
  .object-body__wrapper {
    margin-top: 8px;
    grid-template-columns: 1fr;
  }
  .object-body__sidebar {
    margin-top: 8px;
    order: 1;
  }
}
.object-body__content {
  min-width: 0;
}
@media (max-width: 1212px) {
  .object-body__content {
    order: 2;
  }
  .object-body__content + .object-body__sidebar {
    display: none;
  }
}
.object-body__comment {
  margin-top: 16px;
}
@media (max-width: 1212px) {
  .object-body__comment {
    margin-top: 8px;
  }
}
.object-body__online-display {
  margin-top: 32px;
}
.object-body__data {
  overflow: hidden;
}
.object-body__record-viewings {
  display: grid;
  justify-content: space-between;
  grid-template-columns: 1fr 350px;
  grid-column-gap: 12px;
  margin-bottom: 16px;
}
@media (max-width: 1212px) {
  .object-body__record-viewings {
    margin-top: 8px;
    grid-template-columns: 1fr;
  }
  .object-body__record-viewings > .col:nth-child(2) {
    display: none;
  }
}
.object-body__record-viewing {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
  border-radius: 12px;
}
.object-body__record-viewing .record-viewing-two__wrapper {
  grid-template-columns: 1fr;
  max-width: 100%;
}
.object-body__record-viewing .record-viewing-two__details {
  padding-top: 24px;
  margin-top: 24px;
  border-top: 1px solid var(--primary100);
}
.object-body__record-viewing .record-viewing-two__details > div span:nth-child(2) {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
  color: var(--dark);
}
.object-body__record-viewing .record-viewing-two__ .object-body__record-viewing .record-viewing-two__cancel {
  width: 100%;
}
.object-body__record-viewing:not(:last-child) {
  margin-bottom: 24px;
}
.object-body__rejecteds {
  display: grid;
  justify-content: space-between;
  grid-template-columns: 1fr 350px;
  grid-column-gap: 12px;
  margin-bottom: 16px;
}
@media (max-width: 1212px) {
  .object-body__rejecteds {
    margin-top: 8px;
    grid-template-columns: 1fr;
  }
  .object-body__rejecteds > .col:nth-child(2) {
    display: none;
  }
}
.object-body__col-rejected {
  grid-column: 1/-1;
  display: grid;
  justify-content: space-between;
  grid-template-columns: 1fr 350px;
  grid-column-gap: 12px;
  grid-row-gap: 12px;
}
@media (max-width: 1212px) {
  .object-body__col-rejected {
    grid-template-columns: 1fr;
    grid-row-gap: 8px;
  }
}
.object-body__rejected {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
  border-radius: 12px;
  grid-column: 1/2;
}
.object-body__banners {
  margin-top: 16px;
  min-width: 100%;
  width: 100%;
}
@media (max-width: 1212px) {
  .object-body__banners {
    margin-top: 8px;
  }
}
.object-body__history {
  margin-top: 16px;
}
@media (max-width: 1212px) {
  .object-body__history {
    margin-top: 8px;
  }
}
.object-body__location {
  margin-top: 16px;
  min-width: 100%;
}
@media (max-width: 1212px) {
  .object-body__location {
    margin-top: 8px;
  }
}
.object-body__characteristics {
  margin-top: 16px;
}
@media (max-width: 1212px) {
  .object-body__characteristics {
    margin-top: 8px;
  }
}
.object-body__calc-mort {
  margin-top: 16px;
}
@media (max-width: 1212px) {
  .object-body__calc-mort {
    margin-top: 8px;
  }
}
.object-body__similar-objects {
  margin-top: 32px;
}
@media (max-width: 1212px) {
  .object-body__similar-objects {
    margin-top: 8px;
  }
}
.object-body__similar-city {
  margin-top: 32px;
}
.object-body__similar-city .search-select-one {
  max-width: 320px;
  width: 320px;
}
@media (max-width: 1212px) {
  .object-body__similar-city {
    margin-top: 24px;
  }
}
.object-body__stock {
  margin-top: 24px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 32px;
}
@media (max-width: 1212px) {
  .object-body__stock {
    padding: 16px;
    margin-top: 8px;
  }
}
.object-body__ask {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 32px;
}
@media (max-width: 1212px) {
  .object-body__ask {
    padding: 16px;
  }
}
.object-body__filter {
  margin-top: 12px;
}
@media (max-width: 1212px) {
  .object-body__filter {
    margin-top: 8px;
  }
}
.object-body__cols {
  margin-top: 12px;
  display: grid;
  grid-template-columns: 1fr 350px;
  grid-column-gap: 12px;
}
@media (max-width: 1212px) {
  .object-body__cols {
    margin-top: 16px;
    grid-template-columns: 100%;
  }
}
.object-body__col {
  min-width: 0;
  display: grid;
  grid-row-gap: 12px;
  grid-template-columns: 100%;
}
@media (max-width: 1212px) {
  .object-body__col {
    grid-row-gap: 16px;
  }
}
.object-body__descr .object-data__text {
  margin-top: 16px;
}
.object-body__other-develop {
  margin-top: 32px;
}
@media (max-width: 1212px) {
  .object-body__other-develop {
    margin-top: 8px;
  }
}
.object-body__similar-build {
  margin-top: 32px;
}
@media (max-width: 1212px) {
  .object-body__similar-build {
    margin-top: 16px;
  }
}
.object-body__other {
  margin-top: 32px;
}
.object-body__other .tabs-primary__container {
  background-color: transparent;
  padding: 0;
}
.object-body__other .object-similar__top {
  justify-content: end;
}
.object-body__banner-info {
  margin-top: 32px;
}

.object-banner-info__wrapper {
  background-color: var(--primary100);
  padding: 32px;
  border-radius: 16px;
}
.object-banner-info__descr {
  margin-top: 8px;
}
.object-banner-info__btn {
  margin-top: 24px;
  width: 425px;
}

.object-other-apartment {
  box-shadow: var(--shadow-primary);
  background-color: var(--white);
  border-radius: 12px;
  padding: 32px;
}
.object-other-apartment__top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 24px;
}
.object-other-apartment__nav {
  top: 40%;
}
@media (max-width: 768px) {
  .object-other-apartment__nav {
    display: none;
  }
}
.object-other-apartment__items .swiper-wrapper {
  align-items: stretch;
}
.object-other-apartment__items .swiper-slide {
  height: auto;
}
.object-other-apartment__items .card-primary {
  height: 100%;
}
@media (max-width: 1212px) {
  .object-other-apartment__items {
    margin: -16px;
    padding: 16px;
  }
  .object-other-apartment {
    padding: 16px;
  }
}

.object-advantages {
  box-shadow: var(--shadow-primary);
  background-color: var(--white);
  padding: 32px;
  border-radius: 12px;
}
.object-advantages__top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 24px;
}
@media (max-width: 1212px) {
  .object-advantages__top {
    margin-bottom: 16px;
  }
}
.object-advantages__nav {
  top: 44%;
}
@media (max-width: 768px) {
  .object-advantages__nav {
    display: none;
  }
}
@media (max-width: 1212px) {
  .object-advantages__slider {
    padding: 0 16px;
    margin: 0 -16px;
  }
}
.object-advantages__btn {
  margin-top: 24px;
  width: 100%;
}
.object-advantages__btn._active {
  position: relative;
  font-size: 0;
}
.object-advantages__btn._active::before {
  content: "Свернуть";
  font-size: var(--default-fz);
}
.object-advantages .advantages-card {
  width: 100%;
}
.object-advantages .advantages-card__container {
  width: 100%;
}
.object-advantages._active .object-advantages__slider {
  overflow: visible;
}
.object-advantages._active .object-advantages__nav {
  display: none;
}
.object-advantages._active .object-advantages__items {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 12px;
  grid-row-gap: 32px;
}
@media (max-width: 576px) {
  .object-advantages._active .object-advantages__items {
    grid-template-columns: 1fr;
  }
}
@media (max-width: 1212px) {
  .object-advantages {
    padding: 16px 16px 24px;
  }
}

.object-filter {
  box-shadow: var(--shadow-primary);
  background-color: var(--white);
  padding: 32px;
  border-radius: 16px;
}
@media (min-width: 1213px) {
  .object-filter .field-select__name,
  .object-filter .field-dropdown__name,
  .object-filter .field-range__name {
    --width: 220px;
  }
}
.object-filter__top {
  margin-bottom: 24px;
  display: flex;
  align-items: start;
  justify-content: start;
  flex-direction: column;
}
@media (max-width: 1212px) {
  .object-filter__top {
    margin-bottom: 16px;
    padding: 0 16px;
  }
}
.object-filter__date {
  margin-top: 8px;
  color: var(--primaryTwo);
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
}
@media (max-width: 1212px) {
  .object-filter .filter__btn {
    margin-left: 16px;
  }
}
.object-filter__row--1 {
  grid-template-columns: 37.0141342756% 24.5583038869% 37.0141342756%;
  padding-bottom: 0 !important;
}
.object-filter__row--2 {
  grid-template-columns: 33.1272084806% 38.4275618375% 1fr;
  justify-content: start;
  padding: 32px;
  margin-top: 12px;
  border-radius: 12px;
}
.object-filter__row--2 .filter__item--checkboxes {
  margin-left: 8px;
  display: flex;
  align-items: center;
  justify-self: end;
}
.object-filter__row--2 .filter__item--checkboxes > .checkbox-secondary:not(:last-child) {
  margin-right: 20px;
}
@media (max-width: 1212px) {
  .object-filter__row--2 .filter__item--checkboxes > .checkbox-secondary:not(:last-child) {
    margin-right: 0;
    margin-bottom: 14px;
  }
  .object-filter__row--2 .filter__item--checkboxes {
    margin: 0;
    align-self: start;
    flex-direction: column;
  }
}
.object-filter__row--2 .filter__item:nth-child(2) .choices__list--single {
  padding: 0 30px 0 115px;
}
@media (max-width: 1212px) {
  .object-filter__row--2 {
    border-radius: 0;
    padding: 0;
    display: block !important;
  }
}
.object-filter__sort .choices__list--dropdown {
  width: max-content;
}
@media (max-width: 1212px) {
  .object-filter__sort {
    padding: 0 16px;
    margin-top: 16px;
    justify-content: start;
  }
}
.object-filter__tabs {
  margin-top: 16px;
}
.object-filter__tabs .tabs-primary__inner {
  margin-top: 0;
}
@media (max-width: 1212px) {
  .object-filter__tabs .tabs-primary__inner {
    padding-top: 0;
  }
}
.object-filter__tabs .tabs-primary__container {
  padding: 0;
  margin-top: 32px;
  background-color: var(--white);
}
@media (max-width: 1212px) {
  .object-filter__tabs .tabs-primary__container {
    margin-top: 16px;
  }
}
.object-filter__tabs .tabs-primary__content {
  margin-top: 0;
}
@media (max-width: 1212px) {
  .object-filter__tabs {
    margin-top: 8px;
  }
  .object-filter {
    padding: 16px 0 0;
  }
}

.object-characteristics {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 32px;
}
.object-characteristics__list {
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 68px;
  grid-row-gap: 20px;
}
.object-characteristics__list:not(:first-child) {
  margin-top: 16px;
}
.object-characteristics__list:not([hidden]) {
  display: grid;
}
@media (max-width: 1212px) {
  .object-characteristics__list {
    grid-template-columns: 1fr;
  }
}
.object-characteristics__title {
  font-size: 18px;
}
.object-characteristics__title:first-child {
  margin-bottom: 16px;
}
.object-characteristics__title:not(:first-child) {
  margin-top: 16px;
}
.object-characteristics__item {
  display: flex;
  width: 100%;
}
.object-characteristics__item::after {
  content: "";
  flex: 1 1 0%;
  position: relative;
  top: 16px;
  border-bottom: 1px dashed var(--primary200);
  height: 1px;
  order: 2;
  margin: 0 6px;
}
.object-characteristics__item span {
  font-size: var(--default-fz);
  line-height: var(--default-small-lh);
  font-weight: 400;
}
.object-characteristics__item span:nth-child(1) {
  order: 1;
  color: var(--primaryTwo);
  white-space: nowrap;
}
.object-characteristics__item span:nth-child(2) {
  order: 3;
  max-width: 175px;
  text-align: right;
  color: var(--dark);
}
@media (max-width: 768px) {
  .object-characteristics__item {
    justify-content: space-between;
  }
}
.object-characteristics__more {
  display: flex;
  align-items: center;
  margin-top: 20px;
  color: var(--blue);
  font-size: var(--default-fz);
  line-height: 1;
  font-weight: 500;
}
.object-characteristics__more svg {
  margin-left: 5px;
  width: 20px;
  height: 20px;
  fill: currentColor;
  transition: transform 0.16s ease-in-out;
}
.object-characteristics__more._active svg {
  transform: rotate(-180deg);
}
@media (max-width: 1212px) {
  .object-characteristics__more {
    margin-top: 12px;
  }
}
.object-characteristics.object-characteristics--second .object-characteristics__list {
  grid-template-columns: 100%;
}
.object-characteristics.object-characteristics--second .object-characteristics__item {
  align-items: start;
}
.object-characteristics.object-characteristics--second .object-characteristics__item::after {
  content: none;
}
.object-characteristics.object-characteristics--second .object-characteristics__item span:nth-child(1) {
  width: 50%;
  position: relative;
}
.object-characteristics.object-characteristics--second .object-characteristics__item span:nth-child(1)::before {
  content: "";
  border-bottom: 1px dotted rgba(204, 214, 228, 0.6);
  bottom: 0.2em;
  display: block;
  left: 0;
  position: absolute;
  width: 100%;
}
.object-characteristics.object-characteristics--second .object-characteristics__item span:nth-child(2) {
  width: 50%;
  margin-left: 6px;
  max-width: none;
  text-align: left;
}
@media (max-width: 1212px) {
  .object-characteristics {
    padding: 16px;
  }
}

.object-comment {
  border-radius: 12px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
}
.object-comment__descr {
  margin-top: 24px;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--dark);
}
@media (max-width: 1212px) {
  .object-comment__descr {
    margin-top: 16px;
  }
  .object-comment {
    padding: 16px 16px 24px;
  }
}

.object-attention {
  border-radius: 12px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
}
.object-attention__content {
  margin-top: 1px;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--dark);
  font-weight: 400;
}
.object-attention__content a {
  color: var(--blue);
  font-size: var(--little-big-fz);
  line-height: var(--little-big-lh);
  font-weight: 500;
  transition: color 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .object-attention__content a:hover {
    color: var(--blue-dark);
  }
}
.object-attention__btns {
  margin-top: 32px;
  display: flex;
  align-items: center;
  justify-content: end;
}
@media (max-width: 1212px) {
  .object-attention__btns {
    margin-top: 24px;
    justify-content: center;
  }
}
.object-attention__add, .object-attention__no {
  padding: 0 48px;
}
.object-attention__no {
  margin-left: 32px;
}
@media (max-width: 1212px) {
  .object-attention__no {
    margin-left: 16px;
  }
  .object-attention {
    padding: 16px;
  }
}

.object-data {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
  border-radius: 12px;
  position: relative;
}
.object-data__right {
  position: absolute;
  top: 16px;
  right: 16px;
  max-width: 255px;
}
.object-data__time {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 8px;
}
.object-data__time span:not(:last-child) {
  margin-right: 16px;
}
.object-data__statistics {
  margin-top: 16px;
}
.object-data__statistics-item {
  display: flex;
  align-items: center;
  width: 280px;
  font-size: var(--small-fz);
  line-height: var(--smal-lh);
}
.object-data__statistics-item svg {
  width: 14px;
  height: 14px;
  fill: var(--dark);
}
.object-data__statistics-item > div {
  width: 65px;
  display: flex;
  align-items: center;
  color: var(--dark);
}
.object-data__statistics-item > div span {
  margin-left: 8px;
}
.object-data__statistics-item > div:not(:last-child) {
  margin-right: 16px;
}
.object-data__statistics-item > span:first-child {
  margin-right: 24px;
  width: 140px;
  color: var(--primaryTwo);
}
.object-data__statistics-item:not(:last-child) {
  margin-bottom: 8px;
}
.object-data__time {
  color: var(--primary600);
  font-size: var(--small-fz);
  line-height: 1;
  font-weight: 500;
  padding: 7px 9.5px;
  background-color: var(--primary100);
  border-radius: 8px;
}
.object-data__discount {
  position: relative;
  transform: translateY(-4px);
  margin-left: 16px;
  color: var(--blue);
  transition: color 0.32s ease-in-out;
  display: flex;
  align-items: center;
}
.object-data__discount svg {
  width: 16px;
  height: 16px;
  margin-right: 8px;
  fill: currentColor;
}
@media (min-width: 1213px) {
  .object-data__discount:hover {
    color: var(--blue-dark);
  }
}
.object-data__metro {
  margin-top: 4px;
  flex-wrap: wrap;
}
.object-data__tags {
  margin-top: 16px;
}
.object-data__tags .tag {
  margin-bottom: 0;
  white-space: nowrap;
}
.object-data__price {
  margin-top: 24px;
  display: flex;
  flex-direction: column;
}
.object-data__price.card-price {
  flex-direction: row;
}
.object-data__price.card-price .card-price__price {
  font-size: var(--big-fz);
  line-height: var(--big-lh);
}
.object-data__meter {
  color: var(--primary600);
  font-size: var(--default-fz);
  line-height: 1;
  font-weight: 400;
  margin-top: 4px;
}
.object-data__price-new span:nth-child(2) {
  color: var(--primary600);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
  margin-left: 5px;
}
.object-data__price-old {
  margin-bottom: 5px;
  display: flex;
  align-items: center;
  color: var(--primaryTwo);
}
.object-data__price-old span:nth-child(1) {
  color: var(--primary600);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.object-data__price-old span:nth-child(1) span {
  position: relative;
}
.object-data__price-old span:nth-child(1) span::before {
  content: "";
  border-bottom: 1px solid currentColor;
  position: absolute;
  width: 100%;
  height: 50%;
  transform: rotate(-5deg);
}
.object-data__price-old span:nth-child(2) {
  margin-left: 5px;
  padding: 3px 10px;
  color: var(--green);
  background: rgba(36, 202, 142, 0.1);
  border-radius: 8px;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
}
.object-data__name {
  font-size: var(--big-fz);
  line-height: var(--big-lh);
  font-weight: 500;
  color: var(--dark);
}
.object-data__address {
  margin-top: 8px;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
.object-data__address--one {
  display: block;
  font-weight: 500;
  color: var(--dark);
  font-size: var(--big-fz);
  line-height: var(--big-lh);
}
.object-data__address--two {
  display: block;
  color: var(--dark);
}
.object-data__address--two:not(:first-child) {
  margin-top: 5px;
}
.object-data__address--three {
  color: var(--primaryTwo);
  display: flex;
  align-items: center;
  gap: 12px;
}
.object-data__address--three:not(:first-child) {
  margin-top: 5px;
}
@media (max-width: 1212px) {
  .object-data__address {
    margin-top: 4px;
  }
}
.object-data__mortgage {
  margin-top: 16px;
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.object-data__mortgage span {
  color: var(--blue);
  font-weight: 500;
}
@media (max-width: 768px) {
  .object-data__mortgage {
    margin-left: 0;
  }
  .object-data__mortgage span {
    margin-top: 4px;
  }
}
.object-data__text {
  margin-top: 32px;
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
.object-data__text p {
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
.object-data__text._active {
  display: block;
}
.object-data__text._active + .object-data__more svg {
  transform: rotate(-180deg);
}
@media (max-width: 1212px) {
  .object-data__text {
    margin-top: 16px;
    -webkit-line-clamp: 3;
  }
}
@media (max-width: 576px) {
  .object-data__text {
    -webkit-line-clamp: 6;
  }
}
.object-data__more {
  display: flex;
  align-items: center;
  margin-top: 16px;
  color: var(--blue);
  font-weight: 500;
}
.object-data__more span {
  font-size: var(--default-fz);
  line-height: 1;
}
.object-data__more svg {
  margin-left: 5px;
  width: 20px;
  height: 20px;
  fill: currentColor;
  transition: transform 0.16s ease-in-out;
}
@media (max-width: 1212px) {
  .object-data__more {
    margin-top: 8px;
  }
  .object-data__more svg {
    margin-left: 4px;
  }
}
.object-data__characteristics {
  margin-top: 20px;
  padding: 0;
  box-shadow: none;
  background-color: transparent;
  border-radius: 0;
}
@media (max-width: 768px) {
  .object-data__characteristics {
    margin-top: 24px;
  }
}
.object-data__tooltip {
  margin-left: auto;
  display: flex;
  align-items: center;
}
.object-data__tooltip .secondary-tooltip {
  width: auto;
  height: auto;
}
.object-data__tooltip .secondary-tooltip__btn svg {
  width: 20px;
  height: 20px;
  stroke: var(--primaryTwo);
  stroke-width: 1.5px;
}
.object-data__tooltip .secondary-tooltip__content {
  width: max-content;
  max-width: 200px;
  bottom: 24px;
  left: 0;
  transform: translate(0);
  z-index: 10;
}
.object-data__tooltip > span {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--blue);
  font-weight: 500;
  margin-left: 5px;
}
@media (max-width: 768px) {
  .object-data__tooltip {
    margin-top: 16px;
    margin-left: 0;
  }
}
.object-data__online-display {
  margin-top: 48px;
}
@media (max-width: 768px) {
  .object-data__online-display {
    margin-top: 32px;
  }
}
.object-data .row {
  flex-direction: column;
  align-items: start;
}
.object-data__rating {
  margin-left: 32px;
  display: flex;
  align-items: center;
}
.object-data__rating > div {
  display: flex;
  align-items: center;
}
.object-data__rating > div svg {
  fill: var(--yellow);
  width: 16px;
  height: 16px;
}
.object-data__rating > div svg:not(:last-child) {
  margin-right: 4px;
}
.object-data__rating > span {
  color: var(--primary600);
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  margin-left: 4px;
}
.object-data__rating > span:nth-child(2) {
  font-weight: 500;
}
.object-data__rating > span:nth-child(3) {
  font-weight: 400;
}
@media (max-width: 1212px) {
  .object-data__rating {
    margin: 4px 0 0 0;
  }
}
.object-data__choices {
  margin-top: 24px;
}
@media (max-width: 1212px) {
  .object-data {
    padding: 16px;
  }
}

.object-banners {
  padding: 24px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.object-banners .main-banner {
  padding: 32px;
}
@media (max-width: 1212px) {
  .object-banners {
    padding: 16px 0;
  }
}

.object-history {
  padding: 32px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.object-history__list {
  margin-top: 32px;
  display: flex;
  flex-direction: column;
}
@media (max-width: 1212px) {
  .object-history__list {
    margin-top: 16px;
  }
}
@media (max-width: 768px) {
  .object-history__list {
    display: flex;
  }
}
.object-history__item {
  display: grid;
  align-items: center;
  grid-template-columns: max-content 30% 1fr;
  grid-column-gap: 100px;
  padding: 20px 0;
}
.object-history__item:first-child {
  padding-top: 0;
}
.object-history__item:not(:last-child) {
  border-bottom: 1px solid var(--primary100);
}
@media (max-width: 768px) {
  .object-history__item {
    display: grid;
    grid-template-columns: 130px 130px max-content;
    grid-column-gap: 0;
    padding: 12px 0;
  }
}
@media (max-width: 576px) {
  .object-history__item {
    grid-template-columns: 110px 120px max-content;
  }
}
.object-history__item--plus .object-history__old-price span:nth-child(2) {
  color: var(--red);
  background: rgba(255, 72, 72, 0.1);
}
@media (max-width: 768px) {
  .object-history__item--plus .object-history__old-price span:nth-child(2) {
    background: transparent;
  }
}
.object-history__item--minus .object-history__old-price span:nth-child(2) {
  color: var(--green);
  background: rgba(36, 202, 142, 0.1);
}
@media (max-width: 768px) {
  .object-history__item--minus .object-history__old-price span:nth-child(2) {
    background: transparent;
  }
}
.object-history__date {
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
@media (max-width: 768px) {
  .object-history__date {
    color: var(--primaryTwo);
  }
}
.object-history__old-price {
  display: flex;
  align-items: center;
  color: var(--primaryTwo);
}
.object-history__old-price span:nth-child(1) {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.object-history__old-price span:nth-child(1) span {
  position: relative;
}
.object-history__old-price span:nth-child(1) span::before {
  content: "";
  border-bottom: 1px solid currentColor;
  position: absolute;
  width: 100%;
  height: 50%;
  transform: rotate(-5deg);
}
@media (max-width: 768px) {
  .object-history__old-price span:nth-child(1) {
    display: none;
  }
}
.object-history__old-price span:nth-child(2) {
  margin-left: 8px;
  padding: 3px 10px;
  border-radius: 8px;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
  display: flex;
  align-items: center;
  gap: 4px;
}
.object-history__old-price span:nth-child(2) svg {
  width: 14px;
  height: 14px;
  fill: currentColor;
}
@media (max-width: 768px) {
  .object-history__old-price span:nth-child(2) {
    padding: 0;
    border-radius: 0;
    font-size: var(--default-fz);
    line-height: var(--default-lh);
    margin: 0;
  }
}
.object-history__new-price {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--dark);
  font-weight: 500;
}
@media (max-width: 1212px) {
  .object-history {
    padding: 16px;
  }
}

.object-location {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 32px;
}
.object-location__descr {
  margin-top: 12px;
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
.object-location__btns {
  margin-top: 16px;
  display: inline-flex;
  align-items: center;
  border-bottom: 1px solid var(--primary200);
}
@media (max-width: 1212px) {
  .object-location__btns {
    overflow-x: scroll;
    display: flex;
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .object-location__btns::-webkit-scrollbar {
    display: none;
  }
}
.object-location__btn {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  transition: background-color 0.32s ease-in-out, color 0.32s ease-in-out;
  padding: 9px 20px;
  display: flex;
  align-items: center;
  position: relative;
}
.object-location__btn:not(:last-child) {
  margin-right: 24px;
}
@media (max-width: 1212px) {
  .object-location__btn:not(:last-child) {
    margin-right: 8px;
  }
}
.object-location__btn::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 2px;
  background-color: var(--blue);
  transition: width 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .object-location__btn:hover, .object-location__btn.focus-visible {
    color: var(--blue);
  }
}
@media (max-width: 1212px) {
  .object-location__btn {
    flex-grow: 1;
    justify-content: center;
    padding: 5px 16px 4px;
    white-space: nowrap;
  }
}
.object-location__btn._active {
  color: var(--blue);
}
.object-location__btn._active::before {
  width: 100%;
}
.object-location__infrastructure {
  margin-top: 16px;
  display: none;
  align-items: center;
  overflow-x: auto;
  scrollbar-width: none;
}
.object-location__infrastructure::-webkit-scrollbar {
  display: none;
}
.object-location__infrastructure._active {
  display: flex;
}
.object-location__infrastructure._active-fullscreen {
  display: flex;
  flex-wrap: wrap;
  position: absolute;
  bottom: 16px;
  left: 16px;
  right: 16px;
}
.object-location__infrastructure._active-fullscreen .object-location__infrastructure-btn {
  background-color: var(--blue);
  color: var(--white);
}
.object-location__infrastructure._active-fullscreen .object-location__infrastructure-btn span {
  color: var(--white);
}
.object-location__infrastructure .tag {
  white-space: nowrap;
}
.object-location__infrastructure .tag:not(:last-child) {
  margin-right: 8px;
}
.object-location__infrastructure .tag span {
  margin-left: 8px;
  color: var(--primaryTwo);
  transition: color 0.32s ease-in-out;
}
.object-location__infrastructure .tag._active span {
  color: var(--white);
}
.object-location__infrastructure-btn {
  height: 34px;
  border-radius: 10px;
  font-size: var(--small-fz);
  line-height: 1;
  padding: 0 24px;
  color: var(--dark);
  background-color: rgba(0, 150, 255, 0.08);
  border: none;
  outline: none;
  white-space: nowrap;
  display: flex;
  align-items: center;
}
.object-location__infrastructure-btn span {
  margin-left: 8px;
  color: var(--primaryTwo);
  transition: color 0.32s ease-in-out;
}
.object-location__infrastructure-btn:not(:last-child) {
  margin-right: 8px;
}
.object-location__infrastructure-btn._active {
  background-color: rgba(0, 150, 255, 0.12);
  color: var(--dark);
}
@media (min-width: 1213px) {
  .object-location__infrastructure-btn:hover, .object-location__infrastructure-btn.focus-visible {
    background-color: rgba(0, 150, 255, 0.12);
    color: var(--dark);
  }
}
.object-location__maps {
  margin-top: 16px;
  width: 100%;
  background-color: var(--white);
  border-radius: 12px;
  position: relative;
  overflow: hidden;
}
@media (max-width: 1212px) {
  .object-location__maps {
    margin-top: 16px;
  }
}
.object-location__maps .map-primary {
  width: 100%;
  height: 423px;
  border-radius: 12px;
}
@media (max-width: 1212px) {
  .object-location__maps .map-primary {
    height: 350px;
    pointer-events: none;
  }
}
.object-location__routes {
  display: none;
  position: absolute;
  z-index: 2;
  top: 16px;
  right: 78px;
}
.object-location__routes._active {
  display: block;
}
.object-location__routes._show {
  z-index: -1;
}
@media (max-width: 1212px) {
  .object-location {
    padding: 16px;
  }
}

.object-similar .filter {
  margin-bottom: 32px;
}
@media (max-width: 1212px) {
  .object-similar .container {
    padding: 0;
  }
}
.object-similar__top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 32px;
}
@media (max-width: 1212px) {
  .object-similar__top {
    margin-bottom: 16px;
    padding: 0 16px;
  }
}
@media (max-width: 768px) {
  .object-similar__top {
    padding: 0 16px;
  }
}
.object-similar__nav {
  display: flex;
  align-items: center;
}
.object-similar__nav .nav-arrow-secondary:not(:last-child) {
  margin-right: 10px;
}
@media (max-width: 768px) {
  .object-similar__nav {
    display: none;
  }
}
.object-similar__items {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 12px;
}
.object-similar__items .card-primary {
  height: 100%;
}
.object-similar__items .card-secondary {
  height: 100%;
}
.object-similar__items .card-secondary .card-secondary__bottom {
  margin-top: auto;
}
.object-similar .card-secondary-skeleton {
  height: 100%;
  width: 100%;
}
.object-similar__btn {
  margin-top: 32px;
  width: 100%;
}

.object-two .object-plate-bottom__btn {
  margin: 0;
}
.object-two .bid-user__grade {
  display: flex;
  flex-direction: column;
  border-top: none;
  padding-top: 0;
  margin-top: 32px;
}
.object-two .bid-user__grade .bid-user__title {
  display: none;
}
.object-two .bid-user__grade .bid-user__btn--call {
  padding: 0 11px;
  margin-top: 0;
}
.object-two .bid-user__grade .bid-user__btn--message {
  padding: 0 16px;
  margin-top: 16px;
}
.object-two .bid-user__grade .bid-user__btn--like {
  grid-column: 1/-1;
}

.object-two-body__data {
  margin-top: 0;
}
.object-two-body .bid-user__grade {
  grid-row-gap: 0;
}
.object-two-body .online-display {
  margin-top: 32px;
}
@media (max-width: 1212px) {
  .object-two-body .online-display {
    margin-top: 24px;
  }
}

.object-calc-mort {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 32px;
}
.object-calc-mort__wrapper {
  border-top: 1px solid var(--primary200);
  margin-top: 24px;
  padding-top: 24px;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 12px;
  grid-row-gap: 12px;
  align-items: center;
}
@media (max-width: 768px) {
  .object-calc-mort__wrapper {
    grid-template-columns: 1fr;
  }
}
.object-calc-mort__wrapper > .col:nth-child(1) {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 12px;
  grid-row-gap: 12px;
  align-self: start;
}
.object-calc-mort__wrapper > .col:nth-child(1) .filter-range-one:nth-child(1), .object-calc-mort__wrapper > .col:nth-child(1) .filter-range-one:nth-child(2) {
  grid-column: 1/-1;
}
.object-calc-mort__list {
  margin-top: 24px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 16px;
}
@media (max-width: 1212px) {
  .object-calc-mort__list {
    gap: 12px;
  }
}
.object-calc-mort__btn {
  max-width: 320px;
  flex-grow: 1;
  height: 46px;
  border-radius: 12px;
  border: none;
  background-color: var(--white);
  border: 1px solid var(--primary200);
  position: relative;
}
.object-calc-mort__btn:not(.secondary-tooltip) {
  display: flex;
  align-items: center;
  justify-content: start;
  padding: 0 20px 0 16px;
}
.object-calc-mort__btn span {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 500;
  transition: color 0.32s ease-in-out;
}
.object-calc-mort__btn span:nth-child(1) {
  color: var(--dark);
  flex-grow: 1;
  text-align: left;
}
.object-calc-mort__btn span:nth-child(2) {
  color: var(--blue);
  margin-left: 12px;
}
.object-calc-mort__btn div {
  position: absolute;
  top: -4px;
  right: -4px;
  --size: 20px;
  width: var(--size);
  height: var(--size);
  flex: 0 0 var(--size);
  border-radius: 50%;
  background-color: var(--white);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: var(--shadow-primary);
  opacity: 0;
  visibility: hidden;
  transform: translateY(2px);
  transition: opacity 0.32s ease-in-out, visibility 0.32s ease-in-out, transform 0.32s ease-in-out;
}
.object-calc-mort__btn div svg {
  width: 10px;
  height: 10px;
  stroke: var(--blue);
  stroke-width: 1.5px;
  fill: none;
}
.object-calc-mort__btn._active {
  background-color: var(--blue);
}
.object-calc-mort__btn._active div {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}
.object-calc-mort__btn._active span {
  color: var(--white);
}
@media (min-width: 1213px) {
  .object-calc-mort__btn:hover {
    background-color: var(--blue);
  }
  .object-calc-mort__btn:hover div {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  .object-calc-mort__btn:hover div svg {
    fill: none !important;
  }
  .object-calc-mort__btn:hover span {
    color: var(--white);
  }
  .object-calc-mort__btn.secondary-tooltip:hover .secondary-tooltip__content {
    transform: translateX(-50%) translateY(0);
  }
}
@media (max-width: 768px) {
  .object-calc-mort__btn {
    max-width: none;
  }
}
.object-calc-mort__btn.secondary-tooltip {
  width: auto;
}
.object-calc-mort__btn .secondary-tooltip__btn {
  width: 100%;
  height: 100%;
  background-color: transparent;
  border-radius: none;
  position: static;
  padding: 0 20px 0 16px;
  opacity: 1;
  visibility: visible;
  box-shadow: none;
  transform: translateY(0);
}
.object-calc-mort__btn .secondary-tooltip__content {
  width: auto;
  height: auto;
  top: calc(100% + 2px);
  left: 50%;
  right: auto;
  border-radius: 10px;
  bottom: auto;
  width: 125%;
  transform: translateX(-50%) translateY(5px);
}
.object-calc-mort__info {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
  text-align: center;
}
.object-calc-mort__info span {
  display: block;
  color: var(--dark);
  font-weight: 500;
  font-size: var(--big-fz);
  line-height: var(--big-lh);
  margin-bottom: 6px;
}
@media (max-width: 1212px) {
  .object-calc-mort__info {
    margin-top: 16px;
  }
}
.object-calc-mort__btns {
  margin-top: 24px;
  display: grid;
  grid-template-columns: 100%;
  grid-column-gap: 12px;
  grid-row-gap: 12px;
}
.object-calc-mort__descr {
  margin-top: 16px;
  color: var(--primaryTwo);
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  text-align: center;
}
.object-calc-mort__app {
  width: 100%;
}
.object-calc-mort__app svg {
  width: 16px;
  height: 16px;
  fill: var(--white);
  margin-left: 10px;
}
.object-calc-mort__message {
  width: 100%;
}
.object-calc-mort__message svg {
  width: 16px;
  height: 16px;
  fill: var(--blue);
  margin-left: 10px;
  transition: fill 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .object-calc-mort__message:hover svg {
    fill: var(--white);
  }
}
@media (max-width: 1212px) {
  .object-calc-mort {
    padding: 16px;
  }
}

.object-slider {
  display: flex;
  justify-content: space-between;
  max-height: 500px;
}
.object-slider__body {
  overflow: hidden;
  margin-right: 5px;
  flex: 0 1 70.4819277108%;
}
@media (max-width: 1212px) {
  .object-slider__body {
    margin-right: 0;
  }
}
@media (max-width: 768px) {
  .object-slider__body {
    flex: auto;
  }
}
.object-slider__nav {
  flex-shrink: 0;
  flex: 0 1 29.016064257%;
}
@media (min-width: 1213px) {
  .object-slider__nav .swiper-slide:hover .object-gallery-preview {
    opacity: 1;
    visibility: visible;
  }
  .object-slider__nav .swiper-slide:hover .object-gallery-preview__icon {
    transform: translateY(0);
  }
  .object-slider__nav .swiper-slide:hover .object-gallery-preview span {
    transform: translateY(0);
  }
}
.object-slider__nav .swiper-slide.swiper-slide-thumb-active .object-gallery-preview {
  opacity: 1;
  visibility: visible;
}
.object-slider__nav .swiper-slide.swiper-slide-thumb-active .object-gallery-preview__icon {
  transform: translateY(0);
}
.object-slider__nav .swiper-slide.swiper-slide-thumb-active .object-gallery-preview span {
  transform: translateY(0);
}
@media (max-width: 1212px) {
  .object-slider__nav {
    display: none;
  }
  .object-slider {
    justify-content: center;
  }
}

.object-apart-renov {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
  border-radius: 12px;
}
.object-apart-renov__title {
  margin-bottom: 16px;
}
.object-apart-renov__tabs .tabs-primary__container {
  margin-top: 16px;
  border-radius: 0;
  padding: 0;
  position: relative;
}
.object-apart-renov__tabs .tabs-primary__inner {
  margin-top: 0;
  padding-top: 0;
}
.object-apart-renov__tabs .tabs-primary__content {
  margin-top: 0;
  cursor: pointer;
}
@media (max-width: 1212px) {
  .object-apart-renov__tabs {
    padding: 0;
    border-radius: 0;
  }
}
.object-apart-renov__fullscreen {
  width: 36px;
  height: 36px;
  background-color: var(--white);
  box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
  top: 16px;
  right: 16px;
  transition: box-shadow 0.32s ease-in-out, transform 0.32s ease-in-out;
  pointer-events: none;
}
.object-apart-renov__fullscreen svg {
  width: 16px;
  height: 16px;
}
.object-apart-renov__fullscreen svg path {
  stroke: rgba(22, 22, 22, 0.5);
  transition: stroke 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .object-apart-renov__fullscreen:hover {
    box-shadow: 0 7px 14px rgba(11, 31, 53, 0.15);
    transform: scale(1.2);
  }
  .object-apart-renov__fullscreen:hover svg path {
    stroke: rgb(22, 22, 22);
  }
}
.object-apart-renov__fullscreen--text {
  width: max-content;
  padding: 0 16px;
  color: var(--blue);
}
.object-apart-renov__item {
  position: relative;
  height: 435px;
}
@media (max-width: 768px) {
  .object-apart-renov__item {
    height: 385px;
  }
}
@media (max-width: 576px) {
  .object-apart-renov__item {
    height: 350px;
  }
}
.object-apart-renov__descr {
  margin-top: 24px;
}
.object-apart-renov__descr p:not(:last-child) {
  margin-bottom: 16px;
}
.object-apart-renov__images {
  overflow: hidden;
  height: 100%;
  border-radius: 12px;
  width: 100%;
}
.object-apart-renov__image {
  border-radius: 12px;
  object-fit: cover;
  width: 100%;
  height: 100%;
}
.object-apart-renov__image-bg {
  object-fit: contain;
  transition: background-color 0.32s ease-in-out;
}
.object-apart-renov__ecology {
  position: absolute;
  z-index: 2;
  bottom: 24px;
  left: 24px;
  color: var(--white);
}
.object-apart-renov__ecology-title {
  color: var(--white);
}
.object-apart-renov__ecology > div {
  margin-top: 16px;
  display: flex;
  align-items: center;
}
.object-apart-renov__ecology > div svg {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 12px;
  fill: var(--white);
}
@media (min-width: 1213px) {
  .object-apart-renov__pagination {
    display: none;
  }
}
.object-apart-renov__tags {
  position: absolute;
  z-index: 2;
  top: 16px;
  left: 16px;
}
.object-apart-renov__tag {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  box-shadow: var(--shadow-primary);
  color: var(--gray);
  padding: 8px 16px;
  background-color: var(--white);
  border-radius: 12px;
}
.object-apart-renov__mark {
  position: absolute;
  width: 30px;
  height: 30px;
  margin: -5px;
  padding: 5px;
}
.object-apart-renov__mark > button {
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(61, 61, 61, 0.7);
  border-radius: 50%;
  width: 30px;
  height: 30px;
}
.object-apart-renov__mark > button svg {
  stroke: var(--primaryTwo);
  width: 14px;
  height: 14px;
  fill: var(--white);
}
.object-apart-renov__mark > div {
  background-color: var(--white);
  border: 1px solid rgba(122, 127, 170, 0.2);
  border-radius: 12px;
  color: var(--dark);
  padding: 16px;
  font-size: var(--small-fz);
  line-height: 1;
  position: absolute;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.32s ease-in-out, visibility 0.32s ease-in-out;
  max-width: 168px;
  box-sizing: border-box;
  width: max-content;
  z-index: 3;
}
.object-apart-renov__mark._active:not(._edit) > div {
  opacity: 1;
  visibility: visible;
}
.object-apart-renov__mark._edit svg {
  stroke: var(--white);
  fill: none;
  stroke-width: 1.5px;
  width: 15px;
  height: 15px;
}
.object-apart-renov__mark._edit._active > button {
  background-color: rgba(0, 91, 255, 0.75);
}
.object-apart-renov__nav-prev, .object-apart-renov__nav-next {
  z-index: 2;
  top: 50%;
  transform: translateY(-50%);
}
@media (max-width: 768px) {
  .object-apart-renov__nav-prev, .object-apart-renov__nav-next {
    display: none;
  }
}
.object-apart-renov__nav-prev {
  left: 16px;
}
.object-apart-renov__nav-next {
  right: 16px;
}
@media (max-width: 1212px) {
  .object-apart-renov {
    padding: 16px;
  }
}

.object-construct-progress {
  padding: 32px;
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  background-color: var(--white);
}
.object-construct-progress__top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 24px;
}
@media (max-width: 768px) {
  .object-construct-progress__nav {
    display: none;
  }
}
.object-construct-progress > .row {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 8px;
}
.object-construct-progress__select {
  width: 250px;
  margin-bottom: 24px;
}
.object-construct-progress__select .choices__list--single {
  padding: 0 30px 0 60px;
}
@media (max-width: 1212px) {
  .object-construct-progress__select {
    width: 50%;
    margin-bottom: 16px;
  }
}
@media (max-width: 768px) {
  .object-construct-progress__select {
    width: 100%;
  }
}
.object-construct-progress__btn {
  margin-top: 24px;
  width: 100%;
}
.object-construct-progress__btn._active {
  position: relative;
  font-size: 0;
}
.object-construct-progress__btn._active::before {
  content: "Свернуть";
  font-size: var(--default-fz);
}
@media (max-width: 1212px) {
  .object-construct-progress__items {
    padding: 0 16px;
    margin: 0 -16px;
  }
}
.object-construct-progress._slider-visible > .row {
  margin-bottom: 24px;
}
@media (max-width: 1212px) {
  .object-construct-progress {
    padding: 16px;
  }
}

.object-slider-body {
  position: relative;
}
.object-slider-body__wrapper {
  overflow: hidden;
  height: 100%;
  border-radius: 12px;
  width: 100%;
  cursor: pointer;
}
.object-slider-body__wrapper .swiper-slide > div {
  display: block;
  width: 100%;
  height: 100%;
}
.object-slider-body__wrapper .swiper-slide img {
  width: 100%;
  height: 100%;
  border-radius: 12px;
}
@media (max-width: 768px) {
  .object-slider-body__navigation {
    display: none;
  }
}
.object-slider-body__fullscreen {
  width: 36px;
  height: 36px;
  pointer-events: none;
  background-color: var(--white);
  box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
  top: 16px;
  right: 16px;
  transition: box-shadow 0.32s ease-in-out, transform 0.32s ease-in-out;
}
.object-slider-body__fullscreen svg {
  width: 16px;
  height: 16px;
}
.object-slider-body__fullscreen svg path {
  stroke: rgba(22, 22, 22, 0.5);
  transition: stroke 0.32s ease-in-out;
}
@media (max-width: 1212px) {
  .object-slider-body__fullscreen {
    display: none;
  }
}
@media (min-width: 1213px) {
  .object-slider-body__fullscreen:hover {
    box-shadow: 0 7px 14px rgba(11, 31, 53, 0.15);
    transform: scale(1.2);
  }
  .object-slider-body__fullscreen:hover svg path {
    stroke: rgb(22, 22, 22);
  }
}
.object-slider-body__more {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 8px;
  width: 40px;
  height: 40px;
  position: absolute;
  z-index: 2;
  top: 16px;
  right: 16px;
  color: var(--white);
  box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.1);
  cursor: pointer;
}
.object-slider-body__more svg {
  width: 18px;
  height: 18px;
  fill: var(--white);
}
@media (min-width: 1213px) {
  .object-slider-body__more {
    display: none;
  }
}
@media (max-width: 1212px) {
  .object-slider-body {
    height: 450px;
  }
}
@media (max-width: 768px) {
  .object-slider-body {
    height: 400px;
  }
}
@media (min-width: 1213px) {
  .object-slider-body:hover .object-slider-body__fullscreen {
    transform: scale(1.2);
    box-shadow: 0 7px 14px rgba(11, 31, 53, 0.15);
  }
}

.object-slider-nav {
  overflow: hidden;
  position: relative;
}
.object-slider-nav__wrapper {
  width: 100%;
  height: 100%;
  overflow: hidden;
  padding: 15px;
  margin: -15px;
  box-sizing: content-box;
}
.object-slider-nav__wrapper .swiper-slide {
  cursor: pointer;
  filter: drop-shadow(0px 15px 15px rgba(0, 0, 0, 0.04));
}
.object-slider-nav__wrapper .swiper-slide a {
  display: block;
  width: 100%;
  height: 100%;
}
.object-slider-nav__wrapper .swiper-slide img {
  width: 100%;
  height: 100%;
  border-radius: 12px;
}
.object-slider-nav .nav-arrow-primary--next {
  right: 50%;
  top: auto;
  bottom: 16px;
  transform: translateX(50%);
}
.object-slider-nav .nav-arrow-primary--next svg {
  transform: rotate(90deg);
}
.object-slider-nav .nav-arrow-primary--prev {
  left: auto;
  right: 50%;
  transform: translateX(50%);
  top: 16px;
}
.object-slider-nav .nav-arrow-primary--prev svg {
  transform: rotate(-90deg);
}

.object-rejected__title {
  margin-bottom: 16px;
}
.object-rejected__title:nth-child(2) {
  padding-top: 24px;
  margin-top: 24px;
  border-top: 1px solid var(--primary100);
}
.object-rejected .checkbox-secondary {
  margin-bottom: 8px;
}
.object-rejected .checkbox-secondary__label {
  justify-content: start;
}
.object-rejected .checkbox-secondary__text {
  color: var(--gray) !important;
}
.object-rejected .checkbox-secondary:last-child {
  margin-bottom: 16px;
}
.object-rejected > span {
  margin-bottom: 8px;
  font-weight: 500;
  display: block;
}
.object-rejected__text {
  padding: 24px;
  border: 1px solid var(--primary200);
  border-radius: 12px;
}
.object-rejected__text > p:not(:last-child) {
  margin-bottom: 8px;
}

.object-viewing {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
  border-radius: 12px;
  display: flex;
  align-items: start;
  justify-content: space-between;
  gap: 32px;
}
.object-viewing__title {
  margin-bottom: 8px;
}
.object-viewing__descr {
  color: var(--primaryTwo);
  margin-bottom: 20px;
}
.object-viewing__row {
  display: flex;
  gap: 16px;
  margin-bottom: 12px;
}
.object-viewing__info {
  font-weight: 500;
  font-size: var(--default-fz);
}
.object-viewing__status {
  display: flex;
  align-items: center;
  gap: 8px;
  color: var(--primaryTwo);
  font-size: var(--default-fz);
}
.object-viewing__status svg {
  width: 14px;
  height: 14px;
  fill: currentColor;
}
.object-viewing__status .circle {
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
}
.object-viewing__status .circle svg {
  width: 100%;
  height: 100%;
}
.object-viewing__btns {
  margin-top: 8px;
  display: grid;
  grid-template-columns: max-content max-content;
  gap: 24px;
  align-items: center;
}
.object-viewing__more {
  color: var(--blue);
}

.object-personal-discount > .col:first-child .title-2 {
  margin-bottom: 8px;
}
.object-personal-discount > .col:first-child p {
  margin-bottom: 8px;
}
.object-personal-discount > .col:first-child ul {
  margin: 16px 0 0;
}
.object-personal-discount > .col:first-child ul li {
  color: var(--primaryTwo);
}
.object-personal-discount > .col:first-child ul li:not(:last-child) {
  margin-bottom: 8px;
}
.object-personal-discount > .col:first-child ul li._line {
  display: flex;
  width: 100%;
}
.object-personal-discount > .col:first-child ul li._line::after {
  content: "";
  flex: 1 1 0%;
  position: relative;
  top: 12px;
  border-bottom: 1px dashed var(--primary200);
  height: 1px;
  order: 2;
  margin: 0 6px;
}
.object-personal-discount > .col:first-child ul li._line span:nth-child(1) {
  white-space: nowrap;
}
.object-personal-discount > .col:first-child ul li._line span:nth-child(2) {
  order: 3;
  text-align: right;
  max-width: 40%;
}
.object-personal-discount > .col:first-child ul li._price-you {
  color: var(--dark);
}
.object-personal-discount > .col:first-child ul li._blue {
  color: var(--blue);
}
.object-personal-discount > .col:first-child .btn {
  width: 100%;
}

.object-other-slider {
  margin-top: 24px;
}
.object-other-slider .spollers__item {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 24px;
}
.object-other-slider .spollers__item:not(:last-child) {
  margin-bottom: 24px;
}
.object-other-slider .spollers__title {
  display: flex;
  align-items: center;
  gap: 8px;
}
.object-other-slider .spollers__title svg {
  width: 30px;
  height: 25px;
  fill: var(--gray);
  transition: transform 0.2s ease-in-out;
}
.place-sale__body {
  margin-top: 8px;
  background-color: var(--stand-bg);
  padding: 24px 0;
}
@media (max-width: 1212px) {
  .place-sale__body {
    margin-top: 0;
    padding: 78px 0 24px;
  }
}
.place-sale__container {
  border-radius: 16px;
}
@media (max-width: 1212px) {
  .place-sale__container {
    margin-top: 16px;
  }
  .place-sale__container.container {
    padding: 0;
  }
}
.place-sale__row {
  padding: 24px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.place-sale__row:not(:last-child) {
  margin-bottom: 16px;
}
@media (max-width: 1212px) {
  .place-sale__row {
    padding: 24px 16px;
  }
  .place-sale__row:not(:last-child) {
    margin-bottom: 8px;
  }
}
.place-sale__row-title {
  margin-bottom: 24px;
}
.place-sale__btn {
  margin-top: 24px;
  padding: 0 81px;
  width: 100%;
}
@media (max-width: 1212px) {
  .place-sale__btn {
    margin-right: 16px;
  }
}
@media (max-width: 768px) {
  .place-sale__btn {
    width: calc(100% - 32px);
    margin: 16px auto 0;
    padding: 0 20px;
  }
}
@media (max-width: 1212px) {
  .place-sale {
    background-color: var(--stand-bg);
  }
}
.place-sale .filter__item:not(:last-child) {
  margin-bottom: 40px;
}
.place-sale .filter__item .field-select__name,
.place-sale .filter__item .field-dropdown__name,
.place-sale .filter__item .field-range__name, .place-sale .filter__item .field-input__name {
  --width: 179px;
}

.place-sale-address {
  display: flex;
  flex-direction: column;
}
.place-sale-address__city .search-select {
  max-width: 450px;
}
.place-sale-address__city .row {
  margin-top: 20px;
  display: grid;
  grid-gap: 8px;
}
.place-sale-address__city .row > div {
  margin-top: 0;
}
.place-sale-address__select {
  margin-top: 24px;
  max-width: 300px;
}
.place-sale-address__text {
  font-weight: 400;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--gray);
}
.place-sale-address__checkbox {
  margin-top: 24px;
  align-self: start;
}
@media (max-width: 1212px) {
  .place-sale-address__checkbox {
    margin-top: 10px;
  }
}
.place-sale-address__field {
  margin-top: 20px;
}
@media (max-width: 1212px) {
  .place-sale-address__field {
    margin-top: 16px;
  }
}
.place-sale-address__map {
  margin-top: 24px;
  height: 550px;
  overflow: hidden;
}
@media (max-width: 1212px) {
  .place-sale-address__map {
    margin-top: 16px;
    height: 400px;
  }
}
@media (max-width: 576px) {
  .place-sale-address__map {
    height: 296px;
  }
}

.place-sale-options {
  padding: 24px;
}
@media (min-width: 1213px) {
  .place-sale-options__row {
    display: grid;
    justify-content: space-between;
    align-items: center;
    grid-column-gap: 8px;
  }
  .place-sale-options__row--1 {
    grid-template-columns: 28.7102473498% 28.7102473498% 1fr;
  }
  .place-sale-options__row--2 {
    grid-template-columns: 24.5583038869% 24.4346289753% 24.4346289753% 24.4346289753%;
  }
  .place-sale-options__row--3 {
    grid-template-columns: 17.667844523% 18.9929328622% 28.7102473498% 32.5088339223%;
  }
  .place-sale-options__row--4 {
    grid-template-columns: 33.1272084806% 32.7296819788% 32.7296819788%;
  }
  .place-sale-options__row--5 {
    grid-template-columns: 37.8975265018% 37.8975265018% 1fr;
  }
  .place-sale-options__row--5 .place-sale-options__item:first-child .choices__list--single {
    padding: 0 30px 0 140px;
  }
  .place-sale-options__row--6 {
    grid-template-columns: 76.5017667845% 1fr;
  }
}
@media (max-width: 1212px) {
  .place-sale-options__row {
    display: flex;
    flex-direction: column;
  }
}
.place-sale-options__row:not(:last-child) {
  margin-bottom: 16px;
}
.place-sale-options__row[hidden] {
  display: none;
}
.place-sale-options__more {
  padding: 8px 0;
  color: var(--blue);
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
  display: flex;
  align-items: center;
  transition: color 0.32s ease-in-out;
}
.place-sale-options__more svg {
  width: 20px;
  height: 20px;
  fill: currentColor;
  margin-left: 5px;
  transition: transform 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .place-sale-options__more:hover {
    color: var(--blue-dark);
  }
}
@media (max-width: 1212px) {
  .place-sale-options__item:not(:last-child) {
    margin-bottom: 16px;
  }
}
.place-sale-options._active .place-sale-options__more svg {
  transform: rotate(180deg);
}
@media (max-width: 1212px) {
  .place-sale-options {
    padding: 24px 16px 8px 16px;
  }
}

.place-sale-descr {
  display: flex;
  flex-direction: column;
}
.place-sale-descr__title {
  margin-bottom: 0;
}
.place-sale-descr__btns {
  margin-top: -10px;
  display: flex;
  align-items: center;
  align-self: end;
}
@media (max-width: 768px) {
  .place-sale-descr__btns {
    display: none;
  }
}
.place-sale-descr__btn {
  display: flex;
  align-items: center;
  color: var(--blue);
  transition: color 0.32s ease-in-out;
}
.place-sale-descr__btn svg {
  width: 12px;
  height: 12px;
  fill: currentColor;
  margin-right: 8px;
}
.place-sale-descr__btn:not(:last-child) {
  margin-right: 20px;
}
@media (min-width: 1213px) {
  .place-sale-descr__btn:hover {
    color: var(--blue-dark);
  }
}
.place-sale-descr__textarea {
  margin-top: 16px;
  --height: 144px;
}
@media (max-width: 1212px) {
  .place-sale-descr__textarea {
    margin-top: 24px;
  }
}

.place-sale-price__top {
  margin-bottom: 24px;
  display: flex;
  align-items: center;
}
@media (max-width: 1212px) {
  .place-sale-price__top {
    margin-bottom: 24px;
  }
}
.place-sale-price__title {
  margin: 0 5px 0 0;
}
.place-sale-price__tooltip .secondary-tooltip__content {
  max-width: 395px;
  width: max-content;
}
@media (max-width: 768px) {
  .place-sale-price__tooltip .secondary-tooltip__content {
    max-width: 210px;
  }
}
.place-sale-price__wrapper {
  display: flex;
  align-items: center;
  gap: 8px;
}
@media (max-width: 768px) {
  .place-sale-price__wrapper {
    flex-direction: column;
    align-items: start;
  }
}
.place-sale-price__input {
  width: 350px;
}
.place-sale-price__select {
  width: 265px;
  height: 40px;
}
@media (max-width: 768px) {
  .place-sale-price__select {
    width: 100%;
    height: 54px;
  }
}

.place-sale-video__descr {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
  margin-bottom: 16px;
}

.place-sale-videoshow__top {
  margin-bottom: 20px;
  display: flex;
  align-items: center;
}
@media (max-width: 1212px) {
  .place-sale-videoshow__top {
    margin-bottom: 24px;
  }
}
.place-sale-videoshow__title {
  margin: 0 5px 0 0;
}
.place-sale-videoshow__tooltip .secondary-tooltip__content {
  width: 395px;
}
@media (max-width: 768px) {
  .place-sale-videoshow__tooltip .secondary-tooltip__content {
    width: 210px;
  }
}
.place-sale-videoshow__checkbox .checkbox-secondary__label {
  justify-content: start;
  display: flex;
}

.place-sale-photo__descr {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
  margin-bottom: 16px;
}
.place-sale-photo__wrapper {
  width: 100%;
}
@media (max-width: 1212px) {
  .place-sale-photo__wrapper {
    margin-top: 10px;
  }
}
.place-sale-photo__images {
  display: grid;
  grid-column-gap: 16px;
  grid-row-gap: 16px;
  grid-template-columns: repeat(auto-fill, 271px);
}
.place-sale-photo__image {
  border-radius: 12px;
  padding-bottom: 70.110701107%;
  overflow: hidden;
}
.place-sale-photo__image.drag-drop__item {
  position: relative;
  cursor: pointer;
  transition: opacity 0.16s ease-in-out, transform 0.16s ease-in-out;
}
.place-sale-photo__image.drag-drop__item::before {
  content: "";
  position: absolute;
  background-color: rgba(36, 38, 41, 0.5);
  z-index: 1;
  inset: 0;
  opacity: 0;
  transition: opacity 0.16s ease-in-out;
}
@media (min-width: 1213px) {
  .place-sale-photo__image.drag-drop__item:not(._dragg):hover::before {
    opacity: 1;
  }
  .place-sale-photo__image.drag-drop__item:not(._dragg):hover .place-sale-photo__remove,
  .place-sale-photo__image.drag-drop__item:not(._dragg):hover .place-sale-photo__rotate,
  .place-sale-photo__image.drag-drop__item:not(._dragg):hover .place-sale-photo__icon {
    opacity: 1;
    visibility: visible;
  }
}
.place-sale-photo__image.drag-drop__item._dragg {
  opacity: 0.4;
}
.place-sale-photo__image.drag-drop__item._dragg::before {
  display: none;
}
.place-sale-photo__image.drag-drop__item._dragg .place-sale-photo__icon,
.place-sale-photo__image.drag-drop__item._dragg .place-sale-photo__rotate,
.place-sale-photo__image.drag-drop__item._dragg .place-sale-photo__remove {
  display: none;
}
.place-sale-photo__image.drag-drop__item._over {
  transform: scale(1.075, 1.075);
}
.place-sale-photo__icon {
  position: absolute;
  top: 10px;
  left: 10px;
  width: 32px;
  height: 32px;
  z-index: 2;
  background-color: var(--white);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.16s ease-in-out, visibility 0.16s ease-in-out;
}
.place-sale-photo__icon svg {
  width: 17px;
  height: 17px;
  fill: var(--blue);
}
.place-sale-photo__remove {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 32px;
  height: 32px;
  z-index: 2;
  background-color: var(--white);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.16s ease-in-out, visibility 0.16s ease-in-out;
}
.place-sale-photo__remove svg {
  width: 17px;
  height: 17px;
  fill: var(--red);
}
.place-sale-photo__rotate {
  position: absolute;
  width: 32px;
  height: 32px;
  z-index: 2;
  background-color: var(--white);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.16s ease-in-out, visibility 0.16s ease-in-out;
}
.place-sale-photo__rotate svg {
  width: 17px;
  height: 17px;
  fill: var(--dark);
}
.place-sale-photo__rotate--1 {
  bottom: 10px;
  left: 10px;
}
.place-sale-photo__rotate--2 {
  bottom: 10px;
  right: 10px;
}

.place-present__checkboxes {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-bottom: 24px;
}
.place-present__checkboxes .checkbox-secondary__label {
  justify-content: start;
}
.place-present__summ {
  display: grid;
  grid-template-columns: 35%;
  grid-gap: 8px;
}
.place-present__quantity {
  display: grid;
  grid-template-columns: 35% 35%;
  grid-gap: 8px;
}
.place-present .card-checkbox--second .card-checkbox__remove {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 26px;
  height: 26px;
  z-index: 2;
  background-color: var(--white);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.16s ease-in-out, visibility 0.16s ease-in-out;
}
.place-present .card-checkbox--second .card-checkbox__remove svg {
  width: 17px;
  height: 17px;
  fill: var(--red);
}
@media (min-width: 1213px) {
  .place-present .card-checkbox--second:hover .card-checkbox__remove {
    opacity: 1;
    visibility: visible;
  }
}

.place-sale-additionally .card-checkbox .card-checkbox__price > span:nth-child(1)::before {
  content: none;
}
.place-sale-additionally .additionally-calc {
  max-height: 284px;
  margin-top: 0;
  border: 1px solid var(--primary200);
  padding: 17px;
  border-radius: 12px;
}
.place-sale-additionally .additionally-calc__title {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.place-sale-additionally .additionally-calc__list {
  margin-top: 16px;
  max-height: 246px;
}
.place-sale-additionally .additionally-calc__list .user-info__name {
  font-weight: 500;
}
.place-sale-additionally .additionally-calc__list .card-checkbox:not(:last-child) {
  margin-bottom: 12px;
  padding-bottom: 12px;
  border-bottom: 1px solid var(--primary100);
}

.quiz {
  flex-direction: column;
  align-items: start;
}
.quiz__top {
  display: flex;
  justify-content: space-between;
  max-width: 800px;
  width: 100%;
  margin: 0 auto;
  border-bottom: 1px solid var(--primary100);
  padding-bottom: 8px;
  margin-bottom: 16px;
}
.quiz__title {
  margin-bottom: 24px;
}
.quiz__form {
  flex-grow: 1;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 42px;
  grid-row-gap: 24px;
  max-width: 800px;
  width: 100%;
  margin: 0 auto;
}
.quiz__col {
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.quiz__step {
  margin-bottom: 8px;
}
.quiz__questions {
  margin-bottom: 16px;
}
.quiz__chat {
  background-color: var(--primary100);
  border-radius: 12px;
  padding: 32px;
}
.quiz__chat .simplebar-third {
  max-height: 350px;
}
.quiz__chat .simplebar-third .simplebar-track.simplebar-vertical {
  margin-right: -20px;
}
.quiz__chat .simplebar-content > div {
  display: flex;
  flex-direction: column;
}
.quiz__chat .simplebar-content > div:not(:last-child) {
  margin-bottom: 24px;
}
.quiz__chat .simplebar-content p {
  border: 1px solid var(--primary200);
  border-radius: 2px 12px 12px 12px;
  color: var(--dark);
  padding: 8px 16px;
  background: var(--white);
  position: relative;
}
.quiz__chat .simplebar-content p:first-child {
  margin-left: auto;
}
.quiz__chat .simplebar-content p:not(:last-child) {
  margin-bottom: 16px;
}
.quiz__list {
  display: flex;
  flex-direction: column;
}
.quiz__item {
  height: 100%;
  flex-direction: column;
  align-items: start;
}
.quiz__question {
  display: none;
}

.question {
  position: relative;
  justify-content: center;
}
.question .radio-primary__item {
  width: 100%;
  max-width: max-content;
}
.question .radio-primary__item:not(:last-child) {
  margin-bottom: 12px;
}
.question .radio-primary__input:checked + .radio-primary__label {
  background-color: var(--blue);
  color: var(--white);
}
.question .radio-primary__label {
  transition: background-color 0.32s ease-in-out, color 0.32s ease-in-out;
  position: relative;
  border: 1px solid transparent;
  height: 56px;
  font-size: 16px;
  padding: 0 23px;
  font-weight: 400;
  display: flex;
  align-items: center;
  color: var(--dark);
  background-color: var(--primary100);
  max-width: 100%;
  border-radius: 64px;
}
.question .radio-primary__label::before, .question .radio-primary__label::after {
  content: none;
}
.question .radio-primary__text {
  color: inherit;
  margin: 0;
}
.question .checkbox-secondary:not(:last-child) {
  margin-bottom: 4px;
}
.question .checkbox-secondary__input:checked + .checkbox-secondary__label {
  background-color: var(--blue);
  color: var(--white);
}
.question .checkbox-secondary__label {
  transition: background-color 0.32s ease-in-out, color 0.32s ease-in-out;
  position: relative;
  border: 1px solid transparent;
  height: 56px;
  font-size: 16px;
  padding: 0 23px;
  font-weight: 400;
  display: flex;
  align-items: center;
  color: var(--dark);
  background-color: var(--primary100);
  max-width: 100%;
  border-radius: 64px;
}
.question .checkbox-secondary__label::before, .question .checkbox-secondary__label::after {
  content: none;
}
.question .checkbox-secondary__text {
  color: inherit;
  margin: 0;
}
.question__btns {
  padding-top: 16px;
  margin-top: auto;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 12px;
  position: absolute;
  bottom: 0;
}
.question__btn {
  height: 56px;
  font-size: 16px;
}
.question._current {
  display: flex;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
