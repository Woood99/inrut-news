/* stylelint-disable */
@font-face {
  font-family: "CoFoSans";
  src: url("../fonts/../fonts/CoFoSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "CoFoSans";
  src: url("../fonts/../fonts/CoFoSans-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/../fonts/Inter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/../fonts/Inter-Medium.woff2") format("woff2");
  font-weight: 500;
  font-display: swap;
  font-style: normal;
}
.object-info {
  width: 100%;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 16px;
  color: var(--dark);
  display: grid;
  align-items: center;
  grid-column-gap: 20px;
  justify-content: space-between;
  grid-template-columns: 13.1355932203% 25.8474576271% max-content 1fr 18.6440677966%;
  -webkit-tap-highlight-color: transparent;
  transition: box-shadow 0.32s ease-in-out, transform 0.32s ease-in-out;
  min-height: 96px;
  padding: 24px;
  position: relative;
}
.object-info__link {
  cursor: pointer;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}
.object-info__type {
  font-size: var(--little-big-fz);
  line-height: var(--little-big-lh);
  font-weight: 500;
}
@media (max-width: 1212px) {
  .object-info__type {
    order: 1;
    grid-column: 1/2;
  }
  .object-info .row {
    order: 4;
    grid-column: 1/-1;
    display: flex;
  }
  .object-info__name {
    grid-column: 1/-2;
    order: 3;
  }
}
.object-info__parameter {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}
.object-info__parameter span:not(:first-child) {
  margin-left: 8px;
}
.object-info__parameter span:not(:first-child)::before {
  content: "";
  width: 4px;
  height: 4px;
  display: inline-block;
  background-color: currentColor;
  position: relative;
  top: -2px;
  right: 4px;
  border-radius: 50%;
}
@media (max-width: 1212px) {
  .object-info__parameter {
    order: 3;
    grid-column: 1/2;
    display: block;
    max-width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}
.object-info__offers {
  display: flex;
  align-items: center;
  color: var(--green);
}
.object-info__offers svg {
  width: 20px;
  height: 20px;
  fill: currentColor;
  margin-right: 10px;
}
@media (max-width: 768px) {
  .object-info__offers svg {
    height: 15px;
    width: 15px;
  }
}
.object-info__offers span {
  color: inherit;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.object-info__offers--false {
  color: var(--primary200);
}
@media (max-width: 1212px) {
  .object-info__offers {
    order: 5;
    grid-column: 1/2;
    width: max-content;
  }
}
.object-info__price {
  font-size: var(--little-big-fz);
  line-height: var(--little-big-lh);
  font-weight: 500;
  white-space: nowrap;
}
@media (max-width: 1212px) {
  .object-info__price {
    order: 2;
    grid-column: 1/2;
  }
}
.object-info__tooltips {
  display: flex;
}
@media (max-width: 1212px) {
  .object-info__tooltips {
    order: 4;
    grid-column: 2/3;
    grid-row: 1/2;
    justify-self: end;
    align-items: center;
  }
}
.object-info .main-tooltip-more {
  margin-left: 15px;
}
.object-info__tooltip:not(:first-child) {
  margin-left: 15px;
}
@media (max-width: 1212px) {
  .object-info__tooltip {
    display: none;
  }
  .object-info__tooltip:nth-child(1), .object-info__tooltip:nth-child(2) {
    display: inline-block;
  }
}
.object-info__from {
  margin-top: 8px;
  display: grid;
  grid-template-columns: 40px 1fr;
  grid-column-gap: 12px;
  grid-row-gap: 2px;
}
.object-info__from .user-info__name {
  font-weight: 500;
}
@media (max-width: 1212px) {
  .object-info__from {
    order: 5;
    grid-column: 1/-1;
    padding-top: 16px;
    border-top: 1px solid var(--primary100);
  }
}
@media (max-width: 768px) {
  .object-info__from {
    grid-column-gap: 8px;
  }
}
.object-info--white-block {
  background-color: transparent;
  box-shadow: none;
  padding-left: 0;
  padding-right: 0;
  border-radius: 0;
}
@media (max-width: 1212px) {
  .object-info {
    grid-template-columns: 1fr max-content;
    grid-row-gap: 8px;
    box-shadow: var(--shadow-primary);
  }
}
@media (max-width: 768px) {
  .object-info {
    padding: 16px;
  }
}

.object-info-secondary {
  width: 100%;
  background-color: var(--white);
  border: 1px solid var(--primary100);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  color: var(--dark);
  display: grid;
  align-items: center;
  grid-column-gap: 20px;
  grid-template-columns: 38.7396694215% max-content 1fr;
  -webkit-tap-highlight-color: transparent;
  transition: box-shadow 0.32s ease-in-out, transform 0.32s ease-in-out;
  min-height: 96px;
  padding: 24px;
}
.object-info-secondary__time-geo span {
  display: flex;
  align-items: center;
  color: var(--primary600);
  font-size: var(--default-fz);
  line-height: var(--default-fz);
}
.object-info-secondary__time-geo span svg {
  width: 18px;
  height: 18px;
  flex: 0 0 18px;
  fill: none;
  stroke: var(--primaryTwo);
  margin-right: 10px;
}
@media (max-width: 1212px) {
  .object-info-secondary__time-geo span svg {
    width: 16px;
    height: 16px;
    flex: 0 0 16px;
    margin-right: 8px;
  }
}
.object-info-secondary__time-geo span:not(:last-child) {
  margin-bottom: 8px;
}
@media (max-width: 1212px) {
  .object-info-secondary__time-geo span:not(:last-child) {
    margin-bottom: 12px;
  }
}
.object-info-secondary__time-geo span:nth-child(1) {
  font-weight: 500;
  color: var(--dark);
}
.object-info-secondary__time-geo span:nth-child(1) svg {
  stroke-width: 2px;
}
.object-info-secondary__time-geo span:nth-child(2) {
  font-weight: 500;
}
.object-info-secondary__time-geo span:nth-child(2) svg {
  stroke-width: 1.5px;
}
@media (max-width: 1212px) {
  .object-info-secondary__time-geo {
    order: 2;
  }
}
.object-info-secondary ._mask {
  width: auto;
  height: auto;
}
.object-info-secondary ._mask .secondary-tooltip__btn {
  width: auto;
  height: auto;
  color: var(--blue);
  font-weight: 500;
}
.object-info-secondary ._mask .secondary-tooltip__content {
  width: max-content;
  max-width: 200px;
}
.object-info-secondary__type-price div {
  display: flex;
  align-items: center;
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.object-info-secondary__type-price div:not(:last-child) {
  margin-bottom: 8px;
}
.object-info-secondary__type-price div:nth-child(1) span:nth-child(2) {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  transform: translateY(0) translateX(0px);
  display: inline-block;
}
@media (max-width: 1212px) {
  .object-info-secondary__type-price div:nth-child(1) span:nth-child(2) {
    transform: translateY(0) translateX(0px);
  }
}
.object-info-secondary__type-price div:nth-child(2) {
  color: var(--primary600);
  font-size: var(--default-fz);
  line-height: var(--default-fz);
  font-weight: 400;
}
@media (max-width: 1212px) {
  .object-info-secondary__type-price div:nth-child(2) {
    display: none;
  }
  .object-info-secondary__type-price {
    margin-top: 16px;
    display: flex;
    align-items: center;
    order: 3;
  }
  .object-info-secondary__type-price div:not(:last-child) {
    margin-bottom: 0;
  }
}
.object-info-secondary__mobile-price {
  margin-top: 12px;
  order: 3;
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
@media (min-width: 1213px) {
  .object-info-secondary__mobile-price {
    display: none;
  }
}
.object-info-secondary__from {
  margin-left: auto;
}
@media (max-width: 1212px) {
  .object-info-secondary__from {
    order: 4;
    margin-left: 0;
    margin-top: 12px;
    padding-top: 12px;
    border-top: 1px solid var(--primary100);
  }
  .object-info-secondary__from .user-info__name[data-user-name-full] {
    font-size: 0;
  }
  .object-info-secondary__from .user-info__name[data-user-name-full]::before {
    content: attr(data-user-name-full);
    font-size: var(--default-fz);
  }
}
.object-info-secondary__from .user-info__name {
  font-size: var(--default-fz);
  line-height: var(--little-small-lh);
}
@media (min-width: 1212px) {
  .object-info-secondary:hover:not(.object-info-secondary--no-animate) {
    box-shadow: var(--shadow-primary);
    transform: translateY(-3px);
  }
}
@media (max-width: 1212px) {
  .object-info-secondary {
    grid-template-columns: 1fr;
    padding: 16px;
    border: none;
  }
}

.object-info-third {
  width: 100%;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  color: var(--dark);
  display: grid;
  align-items: center;
  grid-column-gap: 32px;
  grid-row-gap: 8px;
  grid-template-columns: 30.9917355372% 28.9256198347% 28.9256198347% 1fr;
  padding: 24px 24px 24px 24px;
  -webkit-tap-highlight-color: transparent;
  transition: background-color 0.32s ease-in-out;
}
.object-info-third__type-mobile {
  order: 1;
  grid-row: 1/2;
  grid-column: 1/-1;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.object-info-third__type-mobile span {
  color: var(--primaryTwo);
  font-size: var(--small-fz);
  line-height: var(--small-lh);
}
@media (min-width: 769px) {
  .object-info-third__type-mobile {
    display: none;
  }
}
.object-info-third__line-mobile {
  margin: 16px 0 8px;
  order: 4;
  grid-column: 1/-1;
  background-color: var(--primary100);
  width: 100%;
  height: 1px;
}
@media (min-width: 769px) {
  .object-info-third__line-mobile {
    display: none;
  }
}
.object-info-third__from.user-info {
  grid-column-gap: 16px;
  grid-template-columns: 45px 1fr;
  grid-row-gap: 2px;
}
.object-info-third__from.user-info .user-info__avatar {
  width: 45px;
  height: 45px;
}
@media (max-width: 768px) {
  .object-info-third__from.user-info .user-info__avatar {
    width: 40px;
    height: 40px;
  }
}
.object-info-third__from.user-info .user-info__pos {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--primaryTwo);
}
.object-info-third__from.user-info .user-info__name {
  color: var(--dark);
  font-size: var(--little-big-fz);
  line-height: var(--little-big-lh);
  font-weight: 500;
}
@media (max-width: 768px) {
  .object-info-third__from.user-info {
    grid-column-gap: 8px;
    grid-template-columns: 40px 1fr;
  }
  .object-info-third__from {
    order: 5;
  }
}
.object-info-third__quantity {
  text-align: center;
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
@media (max-width: 768px) {
  .object-info-third__quantity {
    font-weight: 400;
    order: 2;
    text-align: left;
  }
}
.object-info-third__offers {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--green);
}
.object-info-third__offers svg {
  width: 20px;
  height: 20px;
  fill: currentColor;
  margin-right: 10px;
}
@media (max-width: 768px) {
  .object-info-third__offers svg {
    height: 15px;
    width: 15px;
  }
}
.object-info-third__offers span {
  color: inherit;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.object-info-third__offers--false {
  color: var(--primary200);
}
@media (max-width: 768px) {
  .object-info-third__offers {
    order: 3;
  }
}
.object-info-third__controls {
  justify-self: end;
}
@media (max-width: 768px) {
  .object-info-third__controls {
    order: 6;
  }
}
@media (max-width: 1212px) {
  .object-info-third {
    grid-column-gap: 16px;
  }
}
@media (max-width: 768px) {
  .object-info-third {
    grid-template-columns: 1fr minmax(120px, max-content);
    padding: 24px 16px 16px;
  }
}

.object-info-grade {
  width: 100%;
  background: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  grid-column-gap: 20px;
  display: grid;
  grid-template-columns: 32.6771653543% 35.0393700787% 1fr;
  align-items: center;
  transition: box-shadow 0.32s ease-in-out;
  min-height: 96px;
  padding: 24px;
}
.object-info-grade__quantity {
  font-size: var(--default-fz);
  line-height: var(--little-small-lh);
  color: var(--dark);
  font-weight: 500;
}
@media (max-width: 1212px) {
  .object-info-grade__quantity {
    justify-self: end;
  }
}
@media (max-width: 576px) {
  .object-info-grade__quantity {
    display: flex;
    flex-direction: column;
  }
}
.object-info-grade__rating {
  justify-self: start;
}
@media (max-width: 1212px) {
  .object-info-grade__rating {
    grid-column: 1/-1;
    justify-self: start;
  }
}
@media (min-width: 1213px) {
  .object-info-grade:hover {
    box-shadow: var(--shadow-primary);
  }
}
@media (max-width: 1212px) {
  .object-info-grade {
    grid-template-columns: max-content 1fr;
    grid-column-gap: 16px;
    grid-row-gap: 32px;
    padding: 24px 10px 24px 16px;
  }
}

.object-info-fourth {
  width: 100%;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  color: var(--dark);
  display: grid;
  align-items: center;
  grid-column-gap: 32px;
  grid-row-gap: 8px;
  grid-template-columns: 41.3223140496% 1fr 1fr;
  padding: 24px;
  min-height: 96px;
  -webkit-tap-highlight-color: transparent;
  transition: box-shadow 0.32s ease-in-out;
}
@media (max-width: 768px) {
  .object-info-fourth__user {
    margin-bottom: 32px;
    grid-column: 1/-1;
  }
}
.object-info-fourth__quantity {
  color: var(--dark);
  font-weight: 500;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
.object-info-fourth__quantity span {
  margin-bottom: 8px;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
  color: var(--primaryTwo);
  display: block;
}
@media (min-width: 769px) {
  .object-info-fourth__quantity span {
    display: none;
  }
}
@media (min-width: 1212px) {
  .object-info-fourth:hover {
    box-shadow: var(--shadow-primary);
  }
}
@media (max-width: 1212px) {
  .object-info-fourth {
    grid-column-gap: 16px;
  }
}
@media (max-width: 768px) {
  .object-info-fourth {
    align-items: start;
    grid-template-columns: 1fr 1fr;
    padding: 24px 16px 16px;
  }
}

.program-card {
  background-color: var(--primary100);
  border-radius: 12px;
  padding: 20px;
}
.program-card__bottom {
  margin-top: 20px;
}
.program-card__type {
  margin-bottom: 16px;
  color: var(--primaryTwo);
}
.program-card__type span {
  font-size: var(--small-fz);
}
.program-card__descr {
  margin-top: 16px;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
.program-card__time-row {
  display: flex;
  gap: 12px;
}
.program-card__time {
  width: 50%;
  display: flex;
  flex-direction: column;
  gap: 6px;
}
.program-card__time span:nth-child(2) {
  color: var(--primaryTwo);
}
.program-card__button {
  margin-top: 24px;
  width: 100%;
}

.card-document {
  position: relative;
  overflow: hidden;
}
.card-document__wrapper {
  clip-path: polygon(100% 100%, 0 100%, 0 0, 73% 0, 75% 1%, 76% 2%, 77% 3%, 97% 22%, 98% 23%, 99% 24%, 100% 27%);
  z-index: 2;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  position: relative;
  padding: 20px 48px 20px 20px;
  border-radius: 12px;
  display: flex;
  flex-direction: column;
  align-items: start;
  box-sizing: border-box;
  transition: background-color 0.3s;
}
.card-document__type {
  margin-bottom: 16px;
}
.card-document__type span {
  font-size: var(--small-fz);
  color: var(--primaryTwo);
}
.card-document__title {
  margin-bottom: 32px;
}
.card-document__image {
  margin-top: auto;
}
.card-document__link {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
.card-document::before, .card-document::after {
  clip-path: polygon(100% 100%, 0 100%, 0 0, 73% 0, 75% 1%, 76% 2%, 77% 3%, 97% 22%, 98% 23%, 99% 24%, 100% 27%);
  content: "";
  background-color: #f1f2f4;
  border-radius: 8px;
  display: block;
  height: 100%;
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
  transition: transform 0.3s ease;
  z-index: 1;
  will-change: transform;
}
@media (min-width: 1213px) {
  .card-document:hover .card-document__wrapper {
    background-color: #fed141;
  }
  .card-document:hover::before {
    background-color: #ffbc4b;
    transform: rotate(3deg);
  }
  .card-document:hover::after {
    background-color: #fb9c0f;
    transform: rotate(-3deg);
  }
}

.card-instruction {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 20px;
  border-radius: 12px;
  position: relative;
}
.card-instruction__title {
  margin-bottom: 32px;
}
.card-instruction__link {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.calendar-primary {
  max-height: 800px;
  min-height: 600px;
  --fc-border-color: var(--primary200);
}
.calendar-primary .fc-scrollgrid.fc-scrollgrid-liquid {
  border-top: none;
}
.calendar-primary .fc-col-header-cell {
  border: none;
  overflow: hidden;
}
.calendar-primary .fc-view-harness {
  max-height: 650px;
}
.calendar-primary .fc-toolbar.fc-header-toolbar {
  margin-bottom: 24px;
  justify-content: end;
}
.calendar-primary .fc-toolbar.fc-header-toolbar .fc-toolbar-chunk .fc-toolbar-title {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  text-transform: capitalize;
  font-weight: 500;
}
.calendar-primary .fc-toolbar.fc-header-toolbar .fc-toolbar-chunk .fc-today-button.fc-button {
  display: none;
}
.calendar-primary .fc-toolbar.fc-header-toolbar .fc-toolbar-chunk .fc-button-group {
  margin-left: 0;
}
.calendar-primary .fc-toolbar.fc-header-toolbar .fc-toolbar-chunk:nth-child(2) {
  margin: 0 24px;
}
@media (max-width: 768px) {
  .calendar-primary .fc-toolbar.fc-header-toolbar {
    margin-bottom: 12px;
  }
}
.calendar-primary .fc-daygrid-day-top {
  flex-direction: row;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-daygrid-day-top {
    justify-content: center;
    align-items: center;
  }
}
.calendar-primary .fc-col-header-cell.fc-day {
  padding: 0 !important;
  color: var(--primaryTwo) !important;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  font-weight: 400;
  text-align: left;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-col-header-cell.fc-day {
    text-align: center;
  }
}
.calendar-primary .fc-daygrid-day {
  background-color: var(--white);
}
.calendar-primary .fc-daygrid-day.fc-day-today {
  background-color: var(--white);
}
.calendar-primary .fc-daygrid-day.fc-day-today.fc-day-today .fc-daygrid-day-number {
  color: var(--white);
  background-color: var(--blue);
}
.calendar-primary .fc-daygrid-day .fc-daygrid-day-number {
  width: 24px;
  height: 24px;
  background-color: transparent;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  color: var(--dark);
  top: 8px;
  left: 8px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-daygrid-day .fc-daygrid-day-number {
    padding: 0;
    font-weight: 500;
    top: 0;
    left: 0;
  }
}
.calendar-primary .fc-daygrid-day.fc-day-other .fc-daygrid-day-top {
  opacity: 1;
}
.calendar-primary .fc-daygrid-day.fc-day-other .fc-daygrid-day-top .fc-daygrid-day-number {
  color: rgba(152, 155, 182, 0.5);
}
.calendar-primary .fc-daygrid-day-events {
  margin: 0;
  position: absolute !important;
  top: 36px;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-daygrid-day-events {
    width: 100%;
    height: 100%;
    top: 0;
  }
}
.calendar-primary .fc-event-main {
  color: var(--dark);
}
.calendar-primary .fc-scrollgrid.fc-scrollgrid-liquid {
  border-left: none;
}
.calendar-primary .fc-scrollgrid-section.fc-scrollgrid-section-body.fc-scrollgrid-section-liquid > td {
  border-left-width: 1px;
}
.calendar-primary .fc-popover {
  margin-top: 97px;
  transform: translateX(3%);
  background-color: var(--white);
  border: 1px solid #EBF1FB;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
  border-radius: 12px;
  max-width: 200px;
  z-index: 97;
}
.calendar-primary .fc-popover .fc-daygrid-event-harness:not(:last-child) {
  margin-bottom: 12px;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-popover .fc-daygrid-event-harness {
    width: 100% !important;
    height: 100% !important;
  }
}
.calendar-primary .fc-popover .fc-event {
  margin: 0 !important;
  padding: 8px !important;
}
.calendar-primary .fc-popover .fc-event span {
  color: var(--primary600);
}
.calendar-primary .fc-popover .fc-event span:nth-child(1) {
  font-size: var(--very-small-fz);
  line-height: 1;
  font-weight: 500;
}
.calendar-primary .fc-popover .fc-event span:nth-child(2) {
  display: block;
  margin-top: 2px;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
}
.calendar-primary .fc-popover .fc-popover-header {
  background: transparent;
  padding: 12px 16px 4px;
  justify-content: end;
}
.calendar-primary .fc-popover .fc-popover-title {
  display: none;
}
.calendar-primary .fc-popover .fc-popover-close {
  color: var(--blue);
}
.calendar-primary .fc-popover .fc-popover-body {
  padding: 12px 16px;
  width: 100%;
  min-width: auto;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-popover {
    margin-top: 0;
  }
}
.calendar-primary .fc-event {
  cursor: pointer;
  border: none;
  white-space: normal;
  flex-direction: column;
  align-items: start;
  margin: 0 8px !important;
  background-color: transparent;
}
.calendar-primary .fc-event .fc-daygrid-event-dot {
  display: none;
}
.calendar-primary .fc-event .fc-event-main span:nth-child(1) {
  font-size: var(--very-small-fz);
  line-height: 1;
  color: var(--primary600);
  font-weight: 500;
  margin: 0;
  display: block;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-event .fc-event-main span:nth-child(1) {
    display: none;
  }
}
.calendar-primary .fc-event .fc-event-main span:nth-child(2) {
  margin-top: 2px;
  color: var(--primary600);
  font-size: var(--very-small-fz);
  line-height: var(--very-small-lh);
  font-weight: 400;
  word-wrap: break-word;
  display: block;
}
@media (max-width: 1212px) {
  .calendar-primary .fc-event .fc-event-main span:nth-child(2) {
    display: none;
  }
}
.calendar-primary .fc-event .fc-event--circle {
  font-size: 0;
  line-height: 0;
  width: 5px;
  height: 5px;
  background-color: var(--green);
  border-radius: 50%;
}
.calendar-primary .fc-event .fc-event--circle:not(:first-child) {
  margin-right: 3px;
}
@media (min-width: 1212px) {
  .calendar-primary .fc-event .fc-event--circle {
    display: none;
  }
}
@media (max-width: 1212px) {
  .calendar-primary .fc-event {
    width: 100%;
    height: 100%;
    margin: 0 !important;
    padding: 5px;
    border-radius: 0;
    background-color: transparent;
    display: flex;
    justify-content: end;
    flex-direction: row;
  }
}
.calendar-primary .fc-daygrid-day-bottom {
  font-size: var(--very-small-fz);
  line-height: 1;
  margin: auto 8px 0;
  transform: translateY(5px);
}
.calendar-primary .fc-daygrid-day-bottom .fc-daygrid-more-link {
  white-space: nowrap;
  border: 1px solid var(--primary200);
  height: 23px;
  padding: 0 10px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--blue);
  font-weight: 500;
}
@media (min-width: 1213px) {
  .calendar-primary .fc-daygrid-day-bottom .fc-daygrid-more-link:hover {
    background-color: transparent;
  }
}
@media (max-width: 1212px) {
  .calendar-primary .fc-daygrid-day-bottom {
    display: none;
  }
  .calendar-primary .fc-daygrid-event-harness {
    width: 100% !important;
    height: 100% !important;
    background-color: #E9FAF4;
  }
  .calendar-primary .fc-daygrid-day-frame {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
.calendar-primary .fc-scrollgrid-section-header > th {
  padding-bottom: 12px;
  border: none !important;
  border-bottom: 1px solid var(--primary200) !important;
}
.calendar-primary .fc-button.fc-button-primary {
  margin-left: 0;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 8px !important;
  padding: 0;
  width: 26px;
  height: 26px;
  flex: 1 1 26px;
  color: var(--primaryTwo);
  transition: all 0.16s ease-in-out;
}
.calendar-primary .fc-button.fc-button-primary:active {
  color: var(--blue);
  background: transparent;
  border-color: currentColor;
  box-shadow: none;
}
.calendar-primary .fc-button.fc-button-primary:active:focus {
  box-shadow: none;
}
.calendar-primary .fc-button.fc-button-primary:focus {
  box-shadow: none;
}
.calendar-primary .fc-button.fc-button-primary .fc-icon {
  font-size: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
  width: auto;
  font-weight: 500;
}
@media (min-width: 1213px) {
  .calendar-primary .fc-button.fc-button-primary:hover {
    background-color: var(--primary100);
    color: var(--blue);
  }
}
.calendar-primary.calendar-primary--mobile-start .fc-toolbar.fc-header-toolbar {
  margin-bottom: 12px;
}
.calendar-primary.calendar-primary--mobile-start .fc-toolbar.fc-header-toolbar .fc-toolbar-chunk .fc-toolbar-title {
  font-size: var(--small-fz);
  line-height: var(--small-lh);
}
.calendar-primary.calendar-primary--mobile-start .fc-daygrid-day-top {
  justify-content: center;
  align-items: center;
}
.calendar-primary.calendar-primary--mobile-start .fc-col-header-cell.fc-day {
  text-align: center;
}
.calendar-primary.calendar-primary--mobile-start .fc-daygrid-day .fc-daygrid-day-number {
  padding: 0;
  font-weight: 500;
}
.calendar-primary.calendar-primary--mobile-start .fc-daygrid-day-events {
  width: 100%;
  height: 100%;
  top: 0;
}
.calendar-primary.calendar-primary--mobile-start .fc-popover {
  margin-top: 0;
}
.calendar-primary.calendar-primary--mobile-start .fc-popover .fc-daygrid-event-harness {
  width: 100% !important;
  height: 100% !important;
}
.calendar-primary.calendar-primary--mobile-start .fc-event {
  width: 100%;
  height: 100%;
  margin: 0 !important;
  padding: 5px;
  border-radius: 0;
  background-color: transparent;
  display: flex;
  justify-content: end;
  flex-direction: row;
  border: none;
}
.calendar-primary.calendar-primary--mobile-start .fc-event span:nth-child(1) {
  display: none;
}
.calendar-primary.calendar-primary--mobile-start .fc-event span:nth-child(2) {
  display: none;
}
.calendar-primary.calendar-primary--mobile-start .fc-event span.fc-event--circle {
  display: none;
}
.calendar-primary.calendar-primary--mobile-start .fc-daygrid-day-bottom {
  display: none;
}
.calendar-primary.calendar-primary--mobile-start .fc-daygrid-event-harness {
  width: 100% !important;
  height: 100% !important;
  background-color: #E9FAF4;
  transition: background-color 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .calendar-primary.calendar-primary--mobile-start .fc-daygrid-event-harness:hover {
    background-color: rgb(210, 240, 229);
  }
}
.calendar-primary.calendar-primary--mobile-start .fc-daygrid-day-frame {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
@media (max-width: 1212px) {
  .calendar-primary {
    min-height: auto;
  }
}

.calendar-event-simplebar .simplebar-track.simplebar-vertical {
  background-color: var(--primary200);
  width: 2px;
  border-radius: 2px;
  overflow: visible;
  margin-right: 1px;
}
.calendar-event-simplebar .simplebar-content-wrapper {
  padding-right: 16px;
}
.calendar-event-simplebar .simplebar-scrollbar {
  border-radius: 2px;
  width: 4px;
  left: -1px;
}
.calendar-event-simplebar .simplebar-scrollbar::before {
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  opacity: 1;
  background-color: var(--blue);
  border-radius: 2px;
  width: 4px;
}
.calendar-event-simplebar .simplebar-track.simplebar-vertical .simplebar-scrollbar::before {
  top: 0;
  bottom: 0;
}
.calendar-event-simplebar .simplebar-scrollbar.simplebar-visible::before {
  opacity: 1;
}

.calendar-event-item {
  padding: 16px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.calendar-event-item__time {
  display: flex;
  align-items: center;
}
.calendar-event-item__time svg {
  width: 16px;
  height: 16px;
  stroke: var(--primaryTwo);
  margin-right: 10px;
  stroke-width: 2px;
  fill: none;
}
.calendar-event-item__time > div {
  display: flex;
  align-items: center;
}
.calendar-event-item__time > div span {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 500;
  color: var(--dark);
}
.calendar-event-item__time > div span:nth-child(2) {
  margin-left: 15px;
}
.calendar-event-item__title {
  margin-top: 24px;
  color: var(--primary600);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.calendar-event-item__location {
  margin-top: 12px;
  display: flex;
  align-items: center;
  font-weight: 500;
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
.calendar-event-item__location svg {
  width: 18px;
  height: 18px;
  stroke: var(--primaryTwo);
  margin-right: 10px;
  stroke-width: 2px;
  fill: none;
}
.calendar-event-item__price {
  display: block;
  margin-top: 12px;
  color: var(--primary600);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.calendar-event-item__user {
  margin-top: 12px;
  padding-top: 12px;
  border-top: 1px solid var(--primary100);
}
.calendar-event-item__bottom {
  margin-top: 16px;
  padding-top: 16px;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.calendar-event-item__bottom::before {
  content: "";
  position: absolute;
  background-color: var(--primary100);
  top: 0;
  left: -16px;
  height: 1px;
  width: calc(100% + 32px);
}
.calendar-event-item__cancel, .calendar-event-item__edit {
  display: flex;
  align-items: center;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  color: var(--primaryTwo);
}
.calendar-event-item__cancel svg, .calendar-event-item__edit svg {
  margin-right: 8px;
  width: 15px;
  height: 15px;
}
@media (min-width: 1213px) {
  .calendar-event-item__cancel, .calendar-event-item__edit {
    transition: color 0.32s ease-in-out;
  }
  .calendar-event-item__cancel:hover, .calendar-event-item__edit:hover {
    color: var(--blue);
  }
}
.calendar-event-item__cancel svg {
  fill: currentColor;
}
.calendar-event-item__edit {
  margin-left: 24px;
}
.calendar-event-item__edit svg {
  fill: none;
  stroke: currentColor;
  stroke-width: 1px;
}

.event {
  padding: 16px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.event__subtitle {
  display: flex;
  align-items: center;
  gap: 8px;
  --width: 200px;
  width: var(--width);
  flex: 0 0 var(--width);
}
.event__icon {
  fill: var(--gray);
  width: 14px;
  height: 14px;
  min-width: 16px;
}
.event__header {
  margin: 0 -16px 16px;
  padding: 0 16px 16px;
  width: calc(100% + 32px);
  border-bottom: 1px solid var(--primary100);
  display: flex;
  align-items: center;
  gap: 16px;
}
.event__edit, .event__remove {
  width: 20px;
  height: 20px;
}
.event__edit svg, .event__remove svg {
  width: 100%;
  height: 100%;
}
.event__edit {
  stroke: var(--blue);
  fill: none;
  stroke-width: 1.5px;
  margin-left: auto;
}
.event__remove {
  fill: var(--red);
  stroke-width: 1.5px;
}
.event__title {
  font-size: var(--little-big-fz);
  line-height: var(--little-big-lh);
  font-weight: 400;
  display: flex;
  align-items: start;
}
.event__descr {
  margin-top: 16px;
  display: flex;
  align-items: start;
}
.event__time {
  margin-top: 16px;
  display: flex;
  align-items: start;
}
.event__time > span {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
.event__time > span:nth-child(1) {
  font-weight: 500;
  margin-right: 16px;
}
.event__time > span:nth-child(3) {
  margin: 0 8px;
}
.event__users {
  margin-top: 16px;
  display: flex;
  flex-wrap: wrap;
  align-items: start;
}
.event__user {
  grid-template-columns: 32px 1fr;
}
.event__user .user-info__avatar {
  width: 32px;
  height: 32px;
}
.event__user .user-info__name {
  transition: color 0.32s ease-in-out;
}
.event__user:not(:last-child) {
  margin-right: 16px;
}
@media (min-width: 1213px) {
  .event__user._hover:hover .user-info__name {
    color: var(--blue);
  }
}
.event__object {
  margin-top: 24px;
  display: flex;
  align-items: start;
}
.event__object .object-small-card .object-small-card__title {
  font-weight: 400;
  color: var(--gray);
}
.event__location {
  margin-top: 24px;
  display: flex;
  align-items: start;
}
.event__link {
  margin-top: 24px;
  display: flex;
  align-items: start;
}
.event__link a {
  display: block;
  color: var(--blue);
}
@media (min-width: 1213px) {
  .event__link a {
    transition: color 0.32s ease-in-out;
  }
  .event__link a:hover {
    color: var(--blue-dark);
    text-decoration: underline;
  }
}
.event__files {
  margin-top: 24px;
  display: flex;
  align-items: start;
}
.event__files > div {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 12px;
}
.event__files .file-small-block {
  max-width: 100%;
  width: max-content;
  flex: 0 0 max-content;
  max-width: 200px;
}
.event__notifs {
  margin-top: 24px;
  display: flex;
  align-items: start;
}
.event__notif {
  display: flex;
  align-items: center;
  gap: 4px;
}
.event__notif:not(:last-child) {
  margin-right: 16px;
}
.event__status {
  margin-top: 24px;
  width: 100%;
}
.event__controls {
  margin-top: 24px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 16px;
}
.event__controls > div {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 16px;
}
.event__controls:not(:last-child) {
  margin-right: 16px;
}
.event__controls .textarea-primary {
  width: 100%;
}

.air-datepicker-global-container {
  z-index: 9999;
}
.air-datepicker-global-container .air-datepicker-cell.-selected- {
  background: var(--blue);
}
.air-datepicker-global-container .air-datepicker-cell.-selected-.-current- {
  color: var(--white);
}
.air-datepicker-global-container .air-datepicker-cell.-current- {
  color: var(--blue);
}
.air-datepicker-global-container .air-datepicker {
  border-radius: 16px;
  cursor: pointer;
}

.date-picker {
  cursor: pointer;
}
.date-picker label {
  cursor: pointer;
}
.date-picker input {
  cursor: pointer;
}
.calendar-secondary .fc-daygrid-day-events {
  max-width: 100%;
}
.calendar-secondary .fc-daygrid-event-harness:not(:last-child) {
  margin-bottom: 6px;
}
.calendar-secondary .fc-event .fc-event-main .fc-event-small {
  display: flex;
  align-items: center;
  gap: 4px;
}
@media (min-width: 1213px) {
  .calendar-secondary .fc-event .fc-event-main .fc-event-small span {
    transition: color 0.32s ease-in-out;
  }
  .calendar-secondary .fc-event .fc-event-main .fc-event-small:hover span {
    color: var(--blue);
  }
}
.calendar-secondary .fc-event .fc-event-main .fc-event-small span:nth-child(2) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: 500;
  margin-top: 0;
}
.calendar-secondary .fc-event .fc-event-main .fc-event-small._active {
  text-decoration: line-through;
  color: var(--primaryTwo);
}
@media (min-width: 1213px) {
  .calendar-secondary .fc-day.fc-daygrid-day:hover .calendar-btn-add {
    opacity: 1;
    visibility: visible;
  }
}
.calendar-secondary .calendar-btn-add {
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--primary100);
  border-radius: 8px;
  position: absolute;
  top: 8px;
  right: 8px;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.16s ease-in-out, visibility 0.16s ease-in-out;
}
.calendar-secondary .calendar-btn-add svg {
  width: 12px;
  height: 12px;
  fill: var(--blue);
}
.calendar-secondary .fc-toolbar.fc-header-toolbar {
  justify-content: start;
}
.calendar-secondary .fc-toolbar.fc-header-toolbar .fc-toolbar-chunk:nth-child(2) {
  margin: 0 0 0 32px;
}
.calendar-secondary .fc-toolbar.fc-header-toolbar .fc-toolbar-chunk:nth-child(3) {
  margin: 0 24px;
}
.calendar-secondary .fc-popover {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}
.calendar-secondary .fc-daygrid-day-bottom .fc-daygrid-more-link {
  border: none;
  height: auto;
  padding: 0;
  border-radius: 0;
}

.bid {
  background-color: var(--stand-bg);
}
.bid__container {
  border-radius: 16px;
  padding: 12px 0;
  grid-column-gap: 16px;
  grid-row-gap: 16px;
  display: grid;
  grid-template-columns: 1fr 29.6610169492%;
  justify-content: space-between;
}
@media (max-width: 1212px) {
  .bid__container {
    grid-template-columns: repeat(2, 1fr);
    grid-row-gap: 8px;
  }
}
.bid__body {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 24px;
  min-width: 0;
}
@media (max-width: 1212px) {
  .bid__body {
    order: 2;
    grid-column: 1/-1;
    padding: 24px 16px;
    padding: 16px 0;
  }
}
.bid__start {
  display: flex;
  align-items: end;
  justify-content: space-between;
}
@media (max-width: 1212px) {
  .bid__start {
    padding: 0 16px;
  }
}
.bid__time {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--primary600);
  font-size: var(--small-fz);
  line-height: 1;
  font-weight: 500;
  padding: 7px 9.5px;
  background-color: var(--primary100);
  border-radius: 8px;
  width: 100%;
  max-width: 255px;
  box-sizing: border-box;
}
.bid__time:not(:last-child) {
  margin-bottom: 16px;
}
.bid__time span:not(:last-child) {
  margin-right: 16px;
}
@media (max-width: 1212px) {
  .bid__time {
    display: none;
  }
}
.bid__list {
  margin-top: 24px;
}
@media (max-width: 1212px) {
  .bid__list {
    padding: 0 16px;
  }
}
.bid__item {
  display: flex;
}
.bid__item > span {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.bid__item > span:nth-child(1) {
  color: var(--primaryTwo);
  order: 1;
}
.bid__item > span:nth-child(2) {
  color: var(--dark);
  order: 3;
  min-width: 50%;
  max-width: 50%;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}
@media (max-width: 1212px) {
  .bid__item > span:nth-child(2) {
    width: 150px;
    min-width: auto;
  }
}
.bid__item::after {
  content: "";
  flex: 1 1 0%;
  position: relative;
  top: 12px;
  border-bottom: 1px dashed var(--primary200);
  height: 1px;
  order: 2;
  margin: 0 6px;
}
@media (min-width: 1213px) {
  .bid__item--price > div {
    display: flex;
    order: 4;
    width: max-content;
    min-width: 50%;
    max-width: 50%;
  }
  .bid__item--price > div > span {
    white-space: nowrap;
    color: var(--dark);
  }
  .bid__item--price > div .bid__item-tooltips {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    margin-top: -15px;
    margin-left: 15px;
    gap: 12px;
  }
  .bid__item--price > div .bid__item-tooltips .main-tooltip {
    display: none;
  }
  .bid__item--price > div .bid__item-tooltips .main-tooltip:nth-child(1), .bid__item--price > div .bid__item-tooltips .main-tooltip:nth-child(2), .bid__item--price > div .bid__item-tooltips .main-tooltip:nth-child(3) {
    display: inline-block;
  }
  .bid__item--price > div .bid__item-tooltips._visible-all .main-tooltip {
    display: inline-block;
  }
  .bid__item--price > div .main-tooltip-more {
    display: flex;
  }
}
@media (max-width: 1212px) {
  .bid__item--price > div {
    font-size: var(--default-fz);
    line-height: var(--default-lh);
    font-weight: 400;
  }
  .bid__item--price > div:nth-child(1) {
    color: var(--primaryTwo);
    order: 1;
  }
  .bid__item--price > div:nth-child(2) {
    color: var(--dark);
    order: 3;
    min-width: 50%;
    max-width: 50%;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }
}
@media (max-width: 1212px) and (max-width: 1212px) {
  .bid__item--price > div:nth-child(2) {
    width: 150px;
    min-width: auto;
  }
}
@media (max-width: 1212px) {
  .bid__item--price > div .bid__item-tooltips {
    display: none;
  }
}
.bid__item:not(:last-child) {
  margin-bottom: 16px;
}
@media (min-width: 1213px) {
  .bid__item--calc-prop {
    display: none;
  }
}
@media (max-width: 1212px) {
  .bid__item:not(:last-child) {
    margin-bottom: 12px;
  }
  .bid__item-tooltips {
    margin: 24px 16px 0;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 10px 24px;
    justify-content: space-between;
  }
}
.bid__descr {
  margin-top: 48px;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
  color: var(--dark);
}
.bid__descr--border {
  padding: 24px 16px;
  border: 1px solid var(--primary200);
  border-radius: 2px 12px 12px 12px;
}
@media (max-width: 1212px) {
  .bid__descr--border {
    padding: 16px 12px;
  }
  .bid__descr {
    margin: 24px 16px 0;
  }
}
.bid__video {
  margin-top: 24px;
}
.bid__photos {
  margin-top: 24px;
}
@media (max-width: 1212px) {
  .bid__sidebar {
    order: 1;
    grid-column: 1/-1;
  }
}
@media (min-width: 1213px) {
  .bid__sidebar ._sticky {
    position: sticky;
    top: 16px;
    width: 100%;
  }
}
.bid__messages {
  margin-top: 16px;
  max-width: none;
  width: 100%;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 24px;
}
@media (max-width: 1212px) {
  .bid__messages {
    order: 3;
    grid-column: 1/-1;
    margin-top: 0;
    padding: 16px;
  }
}
.bid__messages .message-item__text {
  border-radius: 12px 12px 2px 12px;
}
.bid__messages .message-item__text::after {
  content: "";
  background-image: url("../img/message-check.svg");
  height: 20px;
  width: 9px;
  position: absolute;
  bottom: -3px;
  right: -7px;
  background-size: 9px 20px;
  background-repeat: no-repeat;
}
.bid__message {
  align-items: end;
}
.bid__message:not(:last-child) {
  margin-bottom: 16px;
}
.bid__import {
  margin-top: 48px;
}
@media (max-width: 1212px) {
  .bid__import {
    margin: 24px 16px 0;
  }
}
.bid__maps {
  width: 100%;
}
.bid .bid--changed {
  color: var(--blue) !important;
}

.bid-messages__wrapper {
  border: 1px solid var(--primary200);
  border-radius: 12px;
  margin-top: 24px;
}
.bid-messages .simplebar-primary {
  max-width: 100%;
  width: 100%;
  max-height: 281px;
  min-height: 50px;
  padding: 16px;
}
@media (max-width: 1212px) {
  .bid-messages .simplebar-primary {
    padding: 16px 12px;
  }
}
.bid-messages__bottom {
  margin: 0 16px 16px;
  width: calc(100% - 32px);
  position: relative;
  height: 83px;
  min-height: 83px;
  max-height: 83px;
}
.bid-messages__bottom > button {
  width: 20px;
  height: 20px;
  position: absolute;
  bottom: 10px;
  right: 16px;
}
.bid-messages__bottom > button svg {
  width: 100%;
  height: 100%;
  fill: none;
  stroke: var(--blue);
  stroke-width: 1.5px;
}
.bid-messages__bottom .textarea-secondary__input {
  padding: 12px 38px 12px 16px;
}
.bid-messages.bid-messages--textarea .simplebar-primary {
  border-bottom: 1px solid var(--primary200);
  margin-bottom: 16px;
}
@media (min-width: 1213px) {
  .bid-messages._sticky {
    position: sticky;
    top: 16px;
    width: 100%;
  }
}

.bid-import .bid__descr {
  margin-top: 16px;
}
@media (max-width: 1212px) {
  .bid-import .bid__descr {
    margin: 16px 0 0;
  }
}

.bid-descr__content {
  margin-top: 16px;
}
.bid-descr__content p:not(:last-child) {
  margin-bottom: 16px;
}

.bid-user {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
  padding: 24px;
  text-align: center;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
}
@media (min-width: 1213px) {
  .bid-user._sticky {
    position: sticky;
    top: 16px;
    width: 100%;
  }
}
@media (max-width: 1212px) {
  .bid-user {
    flex-direction: row;
    align-items: start;
    flex-wrap: wrap;
  }
}
.bid-user__avatar {
  --size: 129px;
  filter: drop-shadow(0px 15px 15px rgba(0, 0, 0, 0.04));
  z-index: 1;
  position: relative;
  width: var(--size);
  height: var(--size);
  flex: 0 0 var(--size);
}
@media (max-width: 1212px) {
  .bid-user__avatar {
    filter: none;
    --size: 57px;
  }
}
.bid-user__content {
  margin-top: 24px;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}
@media (max-width: 1212px) {
  .bid-user__content {
    width: auto;
    align-items: start;
    margin: 16px 0 0 16px;
  }
}
.bid-user__time {
  margin-top: 5px;
  margin-bottom: 20px;
  color: var(--primaryTwo);
  font-size: var(--very-small-fz);
  line-height: 1;
  font-weight: 400;
}
.bid-user__name {
  color: var(--dark);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 500;
  transition: color 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .bid-user__name:hover {
    color: var(--blue);
  }
}
@media (max-width: 1212px) {
  .bid-user__name {
    margin-top: 2px;
  }
}
.bid-user__rating {
  margin-bottom: 8px;
  display: flex;
  align-items: center;
}
.bid-user__rating > span {
  font-size: var(--default-fz);
  line-height: var(--little-small-lh);
  color: var(--primary600);
}
.bid-user__rating > span:nth-child(2) {
  font-weight: 400;
  margin-left: 4px;
  font-size: var(--default-fz);
  color: var(--primaryTwo);
}
@media (max-width: 1212px) {
  .bid-user__rating > span:nth-child(2) {
    font-weight: 400;
  }
}
.bid-user__rating > span:nth-child(3) {
  margin-left: 4px;
  font-weight: 400;
}
@media (max-width: 1212px) {
  .bid-user__rating {
    margin-top: 8px;
  }
}
.bid-user__rating-stars {
  display: flex;
  align-items: center;
  --icon-size: 16px;
}
.bid-user__rating-stars span {
  color: var(--blue);
  margin-left: 8px;
  font-weight: 500;
}
.bid-user__rating-stars svg {
  margin-left: 8px;
  width: var(--icon-size);
  height: var(--icon-size);
  fill: var(--yellow);
}
@media (max-width: 1212px) {
  .bid-user__rating-stars {
    --icon-size: 12px;
  }
}
.bid-user__quantity {
  display: flex;
  align-items: center;
  color: var(--dark);
}
.bid-user__quantity svg {
  width: 10px;
  height: 10px;
  fill: currentColor;
  margin-right: 5px;
}
.bid-user__quantity span {
  font-size: var(--default-fz);
}
@media (max-width: 1212px) {
  .bid-user__quantity span {
    font-weight: 400;
  }
}
.bid-user__badges {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-bottom: 16px;
}
.bid-user__descr {
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--little-small-lh);
  font-weight: 500;
}
.bid-user__btn {
  margin-top: 32px;
  padding: 0 20px;
  width: 100%;
}
.bid-user__btn svg {
  width: 14px;
  height: 14px;
  fill: currentColor;
  margin-right: 10px;
}
@media (max-width: 1212px) {
  .bid-user__btn {
    margin-top: 21px;
  }
  .bid-user__btn svg {
    width: 14px;
    height: 14px;
  }
  .bid-user {
    padding: 16px 16px 24px;
  }
}
.bid-user--small {
  display: inline-flex;
  overflow: visible;
  flex-direction: row;
  box-shadow: none;
  background-color: transparent;
  border-radius: 0;
  padding: 0;
  text-align: left;
}
.bid-user--small::before, .bid-user--small::after {
  display: none;
}
.bid-user--small .bid-user__avatar {
  --size: 74px;
  filter: none;
  align-self: start;
}
@media (max-width: 1212px) {
  .bid-user--small .bid-user__avatar {
    --size: 57px;
  }
}
.bid-user--small .bid-user__time {
  font-size: var(--small-fz);
  line-height: var(--small-lh);
}
.bid-user--small .bid-user__content {
  margin-top: 0;
  margin-left: 16px;
  text-align: left;
  align-items: start;
}
.bid-user--small .bid-user__name {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
@media (max-width: 1212px) {
  .bid-user--small .bid-user__name {
    font-weight: 400;
  }
}
.bid-user--small .bid-user__rating {
  margin: 0;
  --icon-size: 12px;
}
.bid-user--small .bid-user__quantity {
  margin-top: 5px;
}
.bid-user--small .bid-user__quantity svg {
  margin-right: 10px;
}
@media (max-width: 1212px) {
  .bid-user--small .bid-user__quantity span {
    font-weight: 400;
  }
  .bid-user--small .bid-user__quantity svg {
    margin-right: 5px;
  }
}
.bid-user--small .bid-user__controls {
  align-self: start;
  margin-left: 15px;
}
.bid-user--grade .bid-user__container {
  display: flex;
  align-items: center;
  flex-direction: column;
  padding: 0 32px;
}
@media (max-width: 1212px) {
  .bid-user--grade .bid-user__container {
    flex-direction: row;
    align-items: start;
    padding: 0 0 16px;
  }
  .bid-user--grade .bid-user__content {
    align-items: start;
    margin-left: 16px;
  }
  .bid-user--grade .bid-user__title {
    grid-column: 1/-1;
  }
}
.bid-user--grade .bid-user__time {
  margin-bottom: 0;
}
.bid-user--grade .bid-user__avatar {
  --size: 95px;
}
@media (max-width: 1212px) {
  .bid-user--grade .bid-user__avatar {
    --size: 57px;
  }
  .bid-user--grade .bid-user__name {
    font-weight: 400;
  }
}
.bid-user--grade .bid-user__grade {
  margin-top: 24px;
  padding-top: 24px;
  border-top: 1px solid var(--primary100);
  text-align: center;
  width: 100%;
}
@media (max-width: 1212px) {
  .bid-user--grade .bid-user__grade {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-column-gap: 16px;
    grid-row-gap: 24px;
    margin-top: 0;
    padding: 16px 0 0;
    border-top: 1px solid var(--primary100);
  }
}
.bid-user--grade .bid-user__btn--like, .bid-user--grade .bid-user__btn--dislike, .bid-user--grade .bid-user__btn--comment {
  width: 100%;
  padding: 0 20px;
}
.bid-user--grade .bid-user__btn--like svg, .bid-user--grade .bid-user__btn--dislike svg, .bid-user--grade .bid-user__btn--comment svg {
  margin-right: 16px;
  width: 17px;
  height: 17px;
  fill: currentColor;
}
@media (max-width: 1212px) {
  .bid-user--grade .bid-user__btn--like svg, .bid-user--grade .bid-user__btn--dislike svg, .bid-user--grade .bid-user__btn--comment svg {
    margin-right: 10px;
    width: 14px;
    height: 14px;
  }
  .bid-user--grade .bid-user__btn--like [data-mobile-text], .bid-user--grade .bid-user__btn--dislike [data-mobile-text], .bid-user--grade .bid-user__btn--comment [data-mobile-text] {
    font-size: 0;
  }
  .bid-user--grade .bid-user__btn--like [data-mobile-text]::before, .bid-user--grade .bid-user__btn--dislike [data-mobile-text]::before, .bid-user--grade .bid-user__btn--comment [data-mobile-text]::before {
    content: attr(data-mobile-text);
    font-size: var(--default-fz);
    font-weight: 500;
  }
}
.bid-user--grade .bid-user__btn--like {
  margin-top: 16px;
}
@media (max-width: 1212px) {
  .bid-user--grade .bid-user__btn--like {
    margin-top: 0;
  }
}
.bid-user--grade .bid-user__btn--dislike {
  margin-top: 16px;
}
@media (max-width: 1212px) {
  .bid-user--grade .bid-user__btn--dislike {
    margin-top: 0;
  }
}
.bid-user--grade .bid-user__btn--comment {
  margin-top: 32px;
}
@media (max-width: 1212px) {
  .bid-user--grade .bid-user__btn--comment {
    margin-top: 0;
    grid-column: 1/-1;
  }
}

.user-cashback {
  background-color: var(--stand-bg);
  padding: 12px;
  border-radius: 12px;
  width: 100%;
}
.user-cashback__item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;
}
.user-cashback__item:not(:last-child) {
  margin-bottom: 4px;
}
.user-cashback__item._prc .user-cashback__price {
  background-color: var(--blue);
  border-radius: 12px;
  padding: 0 12px;
  height: 24px;
  width: max-content;
}
.user-cashback__item._prc .user-cashback__price .secondary-tooltip__btn {
  width: auto;
  display: flex;
  align-items: center;
  gap: 4px;
  height: 100%;
  border: none;
}
.user-cashback__item._prc .user-cashback__price .secondary-tooltip__btn span:nth-child(1) {
  font-size: 11px;
  color: var(--white);
  font-weight: 500;
}
.user-cashback__item._prc .user-cashback__price .secondary-tooltip__content {
  width: max-content;
  max-width: 300px;
}
.user-cashback__item._prc .user-cashback__price .secondary-tooltip__content .title-3 {
  margin-bottom: 8px;
}
.user-cashback__price {
  font-weight: 500;
}

.bid-photos__title {
  margin-bottom: 12px;
}
.bid-photos__list {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 12px;
}
.bid-photos__item {
  height: 90px;
  border-radius: 12px;
  overflow: hidden;
}
.bid-photos__item-link {
  width: 100%;
  height: 100%;
}
.bid-photos__item-link img {
  height: 100%;
  width: 100%;
}

.video-block {
  border-radius: 12px;
  position: relative;
}
.video-block__title {
  margin-bottom: 12px;
}
.video-block__title-absolute {
  position: absolute;
  bottom: 24px;
  left: 24px;
}
.video-block__button {
  position: relative;
  height: 300px;
  width: 100%;
}
@media (max-width: 1212px) {
  .video-block__button {
    height: 240px;
  }
}
.video-block__poster {
  border-radius: 12px;
  width: 100%;
  height: 100%;
}
.video-block__video {
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
}
.video-block__video iframe {
  width: 100%;
  height: 100%;
}
.video-block__play {
  width: 52px;
  height: 52px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(2px);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  align-items: center;
  justify-content: center;
}
.video-block__play svg {
  width: 20px;
  height: 20px;
  fill: var(--white);
}

.search-area__title {
  text-align: left;
  padding: 0 16px;
  margin-left: auto;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
}
@media (max-width: 1212px) {
  .search-area__title {
    display: none;
  }
}
.search-area__container {
  margin-top: 0;
}
.search-area .popup-primary__close {
  transform: translate(0);
  margin-top: 0;
  width: 25px;
  height: 25px;
  margin-right: 16px;
  margin-left: 8px;
}
@media (max-width: 1212px) {
  .search-area .popup-primary__close {
    width: auto;
    height: auto;
  }
}
.search-area .tabs-primary__inner {
  margin-top: 0;
}
@media (max-width: 1212px) {
  .search-area .tabs-primary__inner {
    padding-top: 0;
  }
}
.search-area .tabs-primary__content {
  margin-top: 0;
}
.search-area .tabs-primary__container {
  margin-top: 0;
  background-color: transparent;
  border-radius: 0;
  padding: 0;
}
@media (max-width: 1212px) {
  .search-area .tabs-primary {
    border-radius: 0;
    padding: 0;
  }
}
.search-area__items {
  margin-top: 32px;
  padding-bottom: 46px;
  grid-column: 1/2;
}
.search-area__top {
  grid-column: 1/2;
  grid-row: 1/2;
  align-items: center;
  gap: 8px;
  text-align: left;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(230px, auto));
}
.search-area__top .select-secondary:nth-child(2) .choices__list--single {
  padding-left: 75px;
}
.search-area__top .select-secondary:nth-child(3) .choices__list--single {
  padding-left: 60px;
}
.search-area .dragscroll {
  overflow: auto;
  width: 100%;
  height: 100%;
  scrollbar-width: none;
}
.search-area .dragscroll::-webkit-scrollbar {
  display: none;
}
.search-area__right {
  grid-column: 1/2;
  max-height: calc(var(--vh) - 190px);
  overflow-y: auto;
  padding-left: 16px;
}
.search-area__right > .simplebar-vertical {
  right: auto;
  left: 4px;
}
.search-area__right .search-select-one__dropdown {
  min-width: auto;
}
.search-area__right .simplebar-horizontal {
  display: none;
}
.search-area__left {
  grid-row: 1/3;
  grid-column: 2/3;
  position: relative;
  width: 100%;
  height: 100%;
}
.search-area__metro {
  max-height: var(--vh);
  width: 100%;
  overflow: auto;
  padding-left: 20px;
  margin-left: -20px;
  height: 100%;
}
.search-area__metro._sticky {
  position: sticky;
  top: 0;
  width: calc(100% + 20px);
}
.search-area__resize {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 50%;
  cursor: ew-resize;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 40px;
  width: 40px;
  z-index: 99;
}
.search-area__resize svg {
  width: 25px;
  height: 25px;
  fill: var(--dark);
}
@media (min-width: 1213px) {
  .search-area__resize:hover {
    box-shadow: var(--shadow-black-big);
  }
}
.search-area__controls {
  margin-bottom: 16px;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}
.search-area__control {
  height: 25px;
  padding: 0 16px;
  font-size: var(--very-small-fz);
  line-height: var(--very-small-lh);
}
.search-area__control:not(:last-child) {
  margin-right: 16px;
}
.search-area__item {
  text-align: left;
  padding: 24px 0;
}
.search-area__item:first-child {
  padding-top: 0;
}
.search-area__item:last-child {
  padding-bottom: 0;
}
.search-area__item:not(:last-child) {
  border-bottom: 1px solid var(--primary200);
}
.search-area__item .spollers__title {
  display: flex;
  align-items: center;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--primaryTwo);
  font-weight: 500;
  transition: color 0.32s ease-in-out;
}
.search-area__item .spollers__title > div {
  width: 26px;
  height: 16px;
  display: block;
  margin-right: 12px;
  position: relative;
}
.search-area__item .spollers__title > div span {
  color: var(--white);
  font-size: 9px;
  line-height: 1;
  position: absolute;
  left: 0;
  top: 1px;
  background-color: transparent;
  height: 17px;
  width: 28px;
  padding-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.search-area__item .spollers__title > div svg {
  width: 28px;
  height: 17px;
  fill: orange;
}
.search-area__item .spollers__title > svg {
  width: 20px;
  height: 20px;
  fill: currentColor;
  margin-left: 8px;
  transition: transform 0.16s ease-in-out;
}
@media (min-width: 1213px) {
  .search-area__item .spollers__title:hover {
    color: var(--blue);
  }
}
.search-area__item .spollers__title.focus-visible {
  color: var(--blue);
}
.search-area__item .spollers__title._spoller-active > svg {
  transform: rotate(-180deg);
}
.search-area__item[data-search-area-metro="1"] .spollers__title > div svg {
  fill: #E4402D;
}
.search-area__item[data-search-area-metro="1"] .checkbox-secondary__circle {
  background-color: #E4402D;
}
.search-area__item[data-search-area-metro="2"] .spollers__title > div svg {
  fill: #4dbe52;
}
.search-area__item[data-search-area-metro="2"] .checkbox-secondary__circle {
  background-color: #4dbe52;
}
.search-area__item[data-search-area-metro="3"] .spollers__title > div svg {
  fill: #2c75c4;
}
.search-area__item[data-search-area-metro="3"] .checkbox-secondary__circle {
  background-color: #2c75c4;
}
.search-area__item[data-search-area-metro="4"] .spollers__title > div svg {
  fill: #4fc6f4;
}
.search-area__item[data-search-area-metro="4"] .checkbox-secondary__circle {
  background-color: #4fc6f4;
}
.search-area__item[data-search-area-metro="5"] .spollers__title > div svg {
  fill: #994735;
}
.search-area__item[data-search-area-metro="5"] .checkbox-secondary__circle {
  background-color: #994735;
}
.search-area__item[data-search-area-metro="6"] .spollers__title > div svg {
  fill: #f47216;
}
.search-area__item[data-search-area-metro="6"] .checkbox-secondary__circle {
  background-color: #f47216;
}
.search-area__item[data-search-area-metro="7"] .spollers__title > div svg {
  fill: #89339e;
}
.search-area__item[data-search-area-metro="7"] .checkbox-secondary__circle {
  background-color: #89339e;
}
.search-area__item[data-search-area-metro="8"] .spollers__title > div svg {
  fill: #fddd04;
}
.search-area__item[data-search-area-metro="8"] .checkbox-secondary__circle {
  background-color: #fddd04;
}
.search-area__item[data-search-area-metro="8A"] .spollers__title > div svg {
  fill: #fddd04;
}
.search-area__item[data-search-area-metro="8A"] .checkbox-secondary__circle {
  background-color: #fddd04;
}
.search-area__item[data-search-area-metro="9"] .spollers__title > div svg {
  fill: #9f9f9f;
}
.search-area__item[data-search-area-metro="9"] .checkbox-secondary__circle {
  background-color: #9f9f9f;
}
.search-area__item[data-search-area-metro="10"] .spollers__title > div svg {
  fill: #a6d82b;
}
.search-area__item[data-search-area-metro="10"] .checkbox-secondary__circle {
  background-color: #a6d82b;
}
.search-area__item[data-search-area-metro="11"] .spollers__title > div svg {
  fill: #80d4c9;
}
.search-area__item[data-search-area-metro="11"] .checkbox-secondary__circle {
  background-color: #80d4c9;
}
.search-area__item[data-search-area-metro="12"] .spollers__title > div svg {
  fill: #b0bfe7;
}
.search-area__item[data-search-area-metro="12"] .checkbox-secondary__circle {
  background-color: #b0bfe7;
}
.search-area__item[data-search-area-metro="14"] .spollers__title > div svg {
  fill: rgb(255, 168, 175);
}
.search-area__item[data-search-area-metro="14"] .checkbox-secondary__circle {
  background-color: rgb(255, 168, 175);
}
.search-area__item[data-search-area-metro="15"] .spollers__title > div svg {
  fill: #f466ba;
}
.search-area__item[data-search-area-metro="15"] .checkbox-secondary__circle {
  background-color: #f466ba;
}
.search-area__item[data-search-area-metro="16"] .spollers__title > div svg {
  fill: #190304;
}
.search-area__item[data-search-area-metro="16"] .checkbox-secondary__circle {
  background-color: #190304;
}
.search-area__item[data-search-area-metro="17"] .spollers__title > div svg {
  fill: #d97863;
}
.search-area__item[data-search-area-metro="17"] .checkbox-secondary__circle {
  background-color: #d97863;
}
.search-area__item[data-search-area-metro=d1] .spollers__title > div svg {
  fill: #f89c0e;
}
.search-area__item[data-search-area-metro=d1] .checkbox-secondary__circle {
  background-color: #f89c0e;
}
.search-area__item[data-search-area-metro=d2] .spollers__title > div svg {
  fill: #ef2a8a;
}
.search-area__item[data-search-area-metro=d2] .checkbox-secondary__circle {
  background-color: #ef2a8a;
}
.search-area__item[data-search-area-metro=d3] .spollers__title > div svg {
  fill: #f1511b;
}
.search-area__item[data-search-area-metro=d3] .checkbox-secondary__circle {
  background-color: #f1511b;
}
.search-area__item[data-search-area-metro=d4] .spollers__title > div svg {
  fill: #4dc083;
}
.search-area__item[data-search-area-metro=d4] .checkbox-secondary__circle {
  background-color: #4dc083;
}
.search-area__item[data-search-area-metro=d5] .spollers__title > div svg {
  fill: #66c430;
}
.search-area__item[data-search-area-metro=d5] .checkbox-secondary__circle {
  background-color: #66c430;
}
.search-area .spollers__body {
  margin-top: 16px;
}
.search-area__list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  grid-column-gap: 24px;
  grid-row-gap: 24px;
  justify-content: start;
  align-items: start;
}
.search-area__list .checkbox-secondary__label {
  justify-content: start;
}
.search-area__list .checkbox-secondary__text {
  margin-left: 8px;
  display: flex;
  align-items: center;
}
.search-area__list .checkbox-secondary__circle {
  width: 8px;
  height: 8px;
  display: block;
  background-color: orange;
  border-radius: 50%;
  margin-right: 8px;
}
.search-area .row {
  margin-bottom: 0px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.search-area__form {
  position: relative;
  display: grid;
  grid-template-columns: 360px 1fr;
  grid-column-gap: 24px;
  padding: 0;
}
.search-area__scale {
  position: absolute;
  top: 20px;
  right: 20px;
  z-index: 99;
  border-radius: 16px;
  background-color: var(--white);
  box-shadow: 0px 7px 10px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(93, 112, 134, 0.1);
  overflow: hidden;
}
.search-area__scale-btn {
  background-color: var(--white);
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}
.search-area__scale-btn svg {
  width: 18px;
  height: 18px;
  stroke: var(--black);
  stroke-width: 2px;
}
.search-area__scale-btn--minus::before {
  content: "";
  width: 40%;
  height: 1px;
  background-color: rgba(0, 0, 0, 0.05);
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}
.search-area__nav-left {
  width: 100%;
  max-height: 81px;
}
.search-area__bottom {
  position: fixed;
  z-index: 101;
  bottom: 0;
  right: 0;
  left: 0;
  background-color: var(--white);
  box-shadow: 0px -2px 1px rgba(0, 0, 0, 0.1);
  padding: 12px 0;
  height: 105px;
}
.search-area__bottom > div {
  display: flex;
  justify-content: space-between;
  padding: 0 16px;
}
.search-area__bottom .simplebar-primary {
  width: 100%;
  max-width: 100%;
  height: 100%;
}
.search-area__bottom .simplebar-primary .simplebar-track.simplebar-vertical {
  top: 0;
  height: 100%;
}
.search-area__bottom .simplebar-primary .simplebar-track.simplebar-vertical .simplebar-scrollbar {
  max-height: 100%;
}
.search-area__nav {
  display: flex;
  flex-direction: column;
  gap: 12px;
}
.search-area__nav-item {
  display: none;
  align-items: start;
}
.search-area__nav-item > div:nth-child(1) {
  display: flex;
  align-items: center;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
  color: var(--primaryTwo);
  font-weight: 500;
  white-space: nowrap;
}
.search-area__nav-item > div:nth-child(1) > div {
  width: 25px;
  height: 15px;
  display: block;
  margin-right: 6px;
  position: relative;
}
.search-area__nav-item > div:nth-child(1) > div span {
  color: var(--white);
  font-size: 8px;
  line-height: 1;
  position: absolute;
  left: 0;
  top: 0px;
  background-color: transparent;
  width: 25px;
  height: 15px;
  padding-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.search-area__nav-item > div:nth-child(1) > div svg {
  width: 25px;
  height: 15px;
}
.search-area__nav-item > div:nth-child(2) {
  margin-top: -1px;
  margin-left: 8px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;
}
.search-area__nav-item > div:nth-child(2) div {
  display: flex;
  align-items: center;
  font-size: var(--small-fz);
  line-height: var(--small-lh);
}
.search-area__nav-item > div:nth-child(2) div button {
  margin-left: 4px;
  margin-top: 2px;
}
.search-area__nav-item > div:nth-child(2) div button svg {
  width: 12px;
  height: 12px;
}
.search-area__nav-item[data-search-area-metro-nav="1"] svg {
  fill: #E4402D;
}
.search-area__nav-item[data-search-area-metro-nav="2"] svg {
  fill: #4dbe52;
}
.search-area__nav-item[data-search-area-metro-nav="3"] svg {
  fill: #2c75c4;
}
.search-area__nav-item[data-search-area-metro-nav="4"] svg {
  fill: #4fc6f4;
}
.search-area__nav-item[data-search-area-metro-nav="5"] svg {
  fill: #994735;
}
.search-area__nav-item[data-search-area-metro-nav="6"] svg {
  fill: #f47216;
}
.search-area__nav-item[data-search-area-metro-nav="7"] svg {
  fill: #89339e;
}
.search-area__nav-item[data-search-area-metro-nav="8"] svg {
  fill: #fddd04;
}
.search-area__nav-item[data-search-area-metro-nav="8A"] svg {
  fill: #fddd04;
}
.search-area__nav-item[data-search-area-metro-nav="9"] svg {
  fill: #9f9f9f;
}
.search-area__nav-item[data-search-area-metro-nav="10"] svg {
  fill: #a6d82b;
}
.search-area__nav-item[data-search-area-metro-nav="11"] svg {
  fill: #80d4c9;
}
.search-area__nav-item[data-search-area-metro-nav="12"] svg {
  fill: #b0bfe7;
}
.search-area__nav-item[data-search-area-metro-nav="14"] svg {
  fill: rgb(255, 168, 175);
}
.search-area__nav-item[data-search-area-metro-nav="15"] svg {
  fill: #f466ba;
}
.search-area__nav-item[data-search-area-metro-nav="16"] svg {
  fill: #190304;
}
.search-area__nav-item[data-search-area-metro-nav="17"] svg {
  fill: #d97863;
}
.search-area__nav-item[data-search-area-metro-nav=d1] svg {
  fill: #f89c0e;
}
.search-area__nav-item[data-search-area-metro-nav=d2] svg {
  fill: #ef2a8a;
}
.search-area__nav-item[data-search-area-metro-nav=d3] svg {
  fill: #f1511b;
}
.search-area__nav-item[data-search-area-metro-nav=d4] svg {
  fill: #4dc083;
}
.search-area__nav-item[data-search-area-metro-nav=d5] svg {
  fill: #66c430;
}
.search-area__nav-item._active {
  display: flex;
}
.search-area__nav-counter {
  display: none;
  margin-left: 8px;
  font-size: var(--very-small-fz);
  line-height: 1;
  background-color: var(--blue);
  padding: 4px 8px;
  color: var(--white);
  border-radius: 8px;
  align-items: center;
}
.search-area__nav-counter span {
  margin-left: 4px;
}
.search-area__nav-counter._active {
  display: flex;
}
.search-area__btns {
  display: flex;
  flex-direction: column;
  margin-left: 32px;
}
.search-area__go {
  padding: 0 32px;
  height: 37.5px;
}
.search-area__clear {
  margin-top: 6px;
  padding: 0 32px;
  height: 37.5px;
  width: 100%;
}
.search-area__map.map-draw {
  height: calc(var(--vh) - 72px);
}
@media (max-width: 1212px) {
  .search-area__map.map-draw {
    height: calc(var(--vh) - 55px);
  }
}
.search-area__map-btn {
  position: absolute;
  bottom: 20px;
  right: 15px;
  z-index: 2;
}
@media (max-width: 1212px) {
  .search-area {
    padding: 0;
  }
}

.metro-map .search-area__container .row {
  margin-bottom: 24px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.programs-list__items {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 12px;
  grid-row-gap: 12px;
}
.documents-block__tags {
  margin-top: 16px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;
}
.documents-block__list {
  margin-top: 16px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 12px;
  grid-row-gap: 12px;
}

.popular-instructions__title {
  margin-bottom: 16px;
}
.popular-instructions__subtitle {
  margin-bottom: 16px;
}
.popular-instructions__slider {
  position: relative;
}
.popular-instructions .nav-arrow-primary--prev {
  left: -8px;
  transform: translateY(-50%) translateX(-100%);
}
.popular-instructions .nav-arrow-primary--next {
  right: -8px;
  transform: translateY(-50%) translateX(100%);
}

.faq-block__tags {
  margin-top: 16px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 8px;
}
.faq-block__spollers {
  margin-top: 24px;
}
.faq-block__spollers .spollers__item {
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.faq-block__spollers .spollers__item:not(:last-child) {
  margin-bottom: 16px;
}
.faq-block__spollers .spollers__title {
  padding: 24px;
  display: flex;
  align-items: center;
  gap: 8px;
  width: 100%;
}
.faq-block__spollers .spollers__title svg {
  width: 30px;
  height: 25px;
  fill: var(--gray);
  transition: transform 0.2s ease-in-out;
}
.faq-block__spollers .spollers__body {
  padding: 0 24px 24px;
}
.faq-block__link {
  display: block;
  width: max-content;
}
.faq-block__link:not(:last-child) {
  margin-bottom: 12px;
}

.home {
  margin-top: 0;
  background-color: var(--stand-bg);
  padding-bottom: 24px;
  padding-top: 24px;
}
@media (max-width: 1212px) {
  .home {
    padding-top: calc(var(--header-height, 50px) + 16px);
  }
}
.home__title {
  display: flex;
  align-items: center;
}
.home__title svg {
  width: 24px;
  height: 24px;
}
.home__title span {
  margin-left: 16px;
}
@media (max-width: 768px) {
  .home__title {
    padding: 0 16px;
  }
}
.home__title-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 227, 66, 0.2);
  border-radius: 12px;
  width: 42px;
  height: 42px;
}
.home__sale, .home__purchase, .home__price, .home__spec, .home__links, .home__dynamic, .home__dynamic, .home__services, .home__ribbon {
  margin-top: 32px;
}
.home__row {
  background-color: var(--white);
  padding: 32px;
  box-shadow: var(--shadow-primary);
  border-radius: 16px;
}
@media (max-width: 1212px) {
  .home__row {
    padding: 24px 16px;
  }
  .home__all {
    margin-top: 32px;
    height: 50px;
    font-family: "CoFoSans", sans-serif;
    border-radius: 12px;
    color: var(--blue);
    border: 1px solid transparent;
    background-color: rgba(0, 150, 255, 0.08);
    font-size: var(--default-fz);
    line-height: var(--little-small-lh);
    font-weight: 500;
    padding: 0px 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    width: 100%;
  }
  .home__all::before {
    content: none;
  }
}

@media (max-width: 768px) {
  .home-banners.container {
    padding: 0;
  }
}
.home-banners__nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 0;
  right: 0;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: end;
}
.home-banners__container {
  position: relative;
  min-width: 0;
}
.home-banners__wrapper {
  display: grid;
  grid-template-columns: 1fr 383px;
  grid-column-gap: 12px;
  grid-row-gap: 16px;
}
@media (max-width: 1212px) {
  .home-banners__wrapper {
    grid-template-columns: 100%;
  }
}
.home-banners__items {
  height: 100%;
}
.home-banners__items .swiper-wrapper {
  min-height: 338px;
  height: 338px;
}
@media (max-width: 1212px) {
  .home-banners__items {
    padding: 0 16px;
    margin: 0 -16px;
  }
}
.home-banners .main-banner {
  border-radius: 24px;
  background-color: rgb(181, 187, 237);
  padding: 32px 40px;
  background-size: cover;
  background-repeat: no-repeat;
}
.home-banners .main-banner__image {
  background-position: bottom right 20%;
}
@media (max-width: 1212px) {
  .home-banners .main-banner {
    border-radius: 0;
  }
}
.home-banners__item {
  height: 100% !important;
  border-radius: 16px;
}
.home-banners._nav-bottom .home-banners__nav {
  top: auto;
  bottom: 16px;
  right: 16px;
  transform: translateY(0);
  gap: 8px;
}
.home-banners._nav-bottom .nav-arrow-primary {
  transform: translate(0);
  top: auto;
  position: static;
}
.home-banners._big .swiper-wrapper {
  min-height: 420px;
  height: 420px;
}

.home-stories {
  padding-top: 24px;
}
.home-stories__container {
  position: relative;
}
.home-stories__items .swiper-wrapper {
  min-height: 130px;
  height: 130px;
  max-height: 130px;
  align-items: stretch;
}
.home-stories__items .swiper-wrapper .swiper-slide {
  height: auto;
  border-radius: 16px;
}
.home-stories__items .swiper-wrapper .swiper-slide img {
  border-radius: 16px;
  width: 100%;
  max-height: 100%;
  object-position: center;
}
.home-stories .nav-arrow-primary--prev {
  transform: translateY(-50%) translateX(-50%);
}
.home-stories .nav-arrow-primary--next {
  transform: translateY(-50%) translateX(50%);
}

.home-services__list {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-column-gap: 16px;
  grid-row-gap: 24px;
}
@media (max-width: 1212px) {
  .home-services__list {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    margin: 4px -16px;
    padding: 4px 16px;
    grid-column-gap: 16px;
    scrollbar-width: none;
  }
  .home-services__list::-webkit-scrollbar {
    display: none;
  }
}
.home-services__item--big {
  grid-column: 2 span;
}
@media (max-width: 1212px) {
  .home-services__item {
    min-width: 175px;
  }
}
.home-services__login {
  border-radius: 24px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 32px;
  display: flex;
  flex-direction: column;
  transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  position: relative;
}
.home-services__login .row {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.home-services__login .row img {
  border-radius: 50%;
  --size: 70px;
  width: var(--size);
  height: var(--size);
}
@media (max-width: 1212px) {
  .home-services__login .row img {
    position: absolute;
    top: 24px;
    right: 24px;
    --size: 60px;
  }
}
@media (min-width: 1213px) {
  .home-services__login:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-primary);
  }
  .home-services__login:hover .row img {
    animation: updown 0.6s ease-out;
    animation-iteration-count: 1;
  }
}
@media (max-width: 1212px) {
  .home-services__login {
    padding: 24px;
    max-width: calc(100% - 32px);
    width: 100%;
    margin: 0 auto;
  }
}
.home-services__calendar {
  border-radius: 16px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  padding: 24px;
}
.home-services__title {
  transition: color 0.32s ease-in-out;
}
@media (min-width: 1213px) {
  .home-services__title:hover {
    color: var(--blue);
  }
}
.home-services__descr {
  margin-top: 32px;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--dark);
  flex-grow: 1;
}
@media (max-width: 1212px) {
  .home-services__descr {
    margin-top: 24px;
    max-width: 72%;
  }
}
.home-services__btn {
  margin-top: 24px;
}
.home-services.home-services--calendar .home-services__container {
  grid-template-columns: 1fr 400px;
}
.home-services.home-services--services-only .home-services__container {
  grid-template-columns: 1fr;
}
.home-services.home-services--services-only .home-services__list {
  grid-template-columns: repeat(auto-fill, minmax(225px, 1fr));
}

.service-card {
  background-color: var(--white);
  border-radius: 16px;
  box-shadow: var(--shadow-primary);
  padding: 24px;
  transition: transform 0.32s ease-in-out, box-shadow 0.32s ease-in-out;
}
.service-card__icon {
  width: 40px;
  height: 40px;
}
@media (max-width: 1212px) {
  .service-card__icon {
    width: 36px;
    height: 36px;
  }
}
.service-card__title {
  margin-top: 16px;
}
.service-card--small {
  display: flex;
  align-items: center;
}
.service-card--small .service-card__icon {
  width: 30px;
  height: 30px;
}
.service-card--small .service-card__title {
  margin-top: 0;
  margin-right: 16px;
}
@media (min-width: 1213px) {
  .service-card:hover {
    box-shadow: var(--shadow-primary);
    transform: translateY(-3px);
  }
}
@media (max-width: 1212px) {
  .service-card {
    padding: 16px;
  }
}

.home-sale__title svg {
  fill: var(--yellow);
}
.home-sale__container {
  margin-top: 24px;
}
@media (max-width: 1212px) {
  .home-sale__container {
    margin-top: 16px;
    padding: 0 16px;
  }
}
@media (min-width: 1213px) {
  .home-sale__content {
    padding: 32px 24px;
    border-radius: 16px;
    position: relative;
    filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.1));
  }
  .home-sale__content::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    min-height: 160px;
    height: 100%;
    width: 100%;
    z-index: 1;
    background-image: url("../img/home-sale-bg.svg");
    background-repeat: no-repeat;
    background-size: cover;
    border-radius: 16px;
  }
}
.home-sale__subtitle {
  font-size: var(--little-big-fz);
  line-height: var(--little-big-lh);
  font-weight: 500;
  color: var(--primary600);
  position: relative;
  z-index: 2;
  max-width: 44.9380165289%;
}
.home-sale__subtitle span {
  color: var(--blue);
}
@media (max-width: 1212px) {
  .home-sale__subtitle {
    max-width: none;
  }
}
.home-sale__city {
  font-weight: inherit;
  color: var(--blue);
  transition: color 0.32s ease-in-out;
  display: inline-flex;
  align-items: center;
}
.home-sale__city svg {
  margin: 2px 0 0 3px;
  width: 18px;
  height: 18px;
  fill: currentColor;
}
@media (min-width: 1213px) {
  .home-sale__city:hover {
    color: var(--primary600);
  }
}
.home-sale__form {
  margin-top: 24px;
  display: flex;
  align-items: center;
  position: relative;
  z-index: 2;
}
@media (max-width: 1212px) {
  .home-sale__form {
    flex-direction: column;
    align-items: start;
  }
}
.home-sale__object {
  width: 300px;
}
@media (max-width: 1212px) {
  .home-sale__object {
    width: 100%;
  }
}
.home-sale__price {
  width: 300px;
  margin-left: 8px;
}
@media (max-width: 1212px) {
  .home-sale__price {
    margin-left: 0;
    margin-top: 16px;
    width: 100%;
  }
}
@media (max-width: 768px) {
  .home-sale__price {
    max-width: none;
  }
}
.home-sale__btn {
  margin-left: 8px;
  flex-grow: 1;
  display: flex;
  align-items: center;
}
@media (max-width: 1212px) {
  .home-sale__btn {
    margin-top: 24px;
    margin-left: 0;
    width: 100%;
  }
}
@media (max-width: 768px) {
  .home-sale__btn {
    max-width: none;
  }
}
.home-sale__btn--maps {
  margin-right: 16px;
}
.home-sale__btn--maps svg {
  width: 18px;
  height: 18px;
  fill: currentColor;
  margin-left: 10px;
}
@media (max-width: 1212px) {
  .home-sale__btn--maps {
    margin-bottom: 16px;
    margin-right: 0;
  }
}

.home-purchase__container {
  margin-top: 24px;
  background-color: rgb(160, 186, 252);
  border-radius: 24px;
  position: relative;
}
@media (max-width: 768px) {
  .home-purchase__container {
    margin-top: 16px;
  }
}
.home-purchase__content {
  position: relative;
  z-index: 1;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 40px;
}
@media (max-width: 1212px) {
  .home-purchase__content {
    align-items: stretch;
    padding: 24px 16px;
    flex-direction: column;
  }
}
.home-purchase__left {
  max-width: 310px;
}
@media (max-width: 1212px) {
  .home-purchase__left {
    max-width: none;
  }
}
.home-purchase__text {
  margin-top: 8px;
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  font-weight: 400;
}
.home-purchase__text p:not(:last-child) {
  margin-bottom: 12px;
}
.home-purchase__right {
  display: grid;
  align-items: center;
  grid-template-columns: 1fr max-content;
  grid-column-gap: 18px;
  grid-row-gap: 24px;
  background-color: var(--white);
  backdrop-filter: blur(5px);
  border-radius: 16px;
  padding: 32px 24px;
}
.home-purchase__right img {
  max-height: 58px;
}
@media (max-width: 768px) {
  .home-purchase__right img {
    max-height: 60px;
    margin: 0 auto;
  }
}
.home-purchase__right span {
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  color: var(--black);
  font-weight: 500;
}
@media (max-width: 768px) {
  .home-purchase__right span {
    margin-top: 10px;
  }
}
.home-purchase__right .btn {
  grid-column: 1/-1;
}
@media (max-width: 768px) {
  .home-purchase__right .btn {
    margin-top: 24px;
  }
}
@media (max-width: 1212px) {
  .home-purchase__right {
    margin-top: 24px;
    padding: 24px 16px;
  }
}
@media (max-width: 768px) {
  .home-purchase__right {
    grid-template-columns: 1fr;
    text-align: center;
    align-items: center;
    justify-content: center;
    grid-row-gap: 0;
  }
}
.home-purchase__bottom-btn {
  width: 100%;
  margin-top: 24px;
  padding: 0 16px;
}
@media (max-width: 768px) {
  .home-purchase__bottom-btn {
    margin-top: 16px;
    width: 100%;
  }
}
.home-purchase__banner {
  margin-top: 24px;
}

.home-price .container {
  position: relative;
}
@media (max-width: 768px) {
  .home-price__title {
    padding: 0;
  }
}
.home-price__top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 24px;
}
@media (max-width: 768px) {
  .home-price__top {
    margin-bottom: 16px;
  }
}
.home-price__more {
  margin-top: 24px;
  padding: 0 16px;
}
@media (max-width: 768px) {
  .home-price__more {
    margin-top: 16px;
    width: 100%;
  }
}
@media (min-width: 1213px) {
  .home-price .object-info {
    grid-template-columns: 155px 305px max-content 1fr 220px;
    margin-bottom: 0;
    z-index: 1;
  }
  .home-price .object-info__link {
    width: calc(100% + 64px);
    left: -32px;
  }
  .home-price .home-object-info {
    position: relative;
    margin: 0;
  }
  .home-price .home-object-info:not(:last-child) {
    border-bottom: 1px solid var(--primary100);
  }
  .home-price .home-object-info::after {
    content: "";
    background-color: var(--primary100);
    opacity: 0;
    width: calc(100% + 64px);
    height: 100%;
    position: absolute;
    top: 0;
    left: -32px;
    right: 0;
    z-index: 0;
  }
  .home-price .home-object-info:hover::after {
    opacity: 1;
  }
}
.home-price .tabs-primary__container {
  padding: 0;
  background-color: transparent;
  border-radius: 0;
}
.home-price .tabs-primary__inner {
  margin-top: 0;
}
.home-price .tabs-primary .tabs__body {
  position: relative;
}
.home-price .nav-arrow-primary {
  top: 128px;
}
@media (max-width: 1212px) {
  .home-price .nav-arrow-primary {
    display: none;
  }
}
.home-price__container {
  margin-top: 16px;
  position: relative;
}
.home-price__items {
  margin: -12px;
  padding: 12px;
}
.home-price__items .swiper-wrapper {
  align-items: stretch;
}
.home-price__items .swiper-slide {
  height: auto;
}
.home-price__items .card-primary {
  height: 100%;
}
.home-price__items .card-secondary__bottom {
  border-top: 1px solid var(--primary100);
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: auto;
  padding-top: 16px;
}
@media (max-width: 768px) {
  .home-price__items {
    margin: -16px;
    padding: 16px;
  }
}
.home-price__banner {
  margin-top: 12px;
}
.home-price__banner .banner-third {
  cursor: pointer;
}

.home-spec__top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 24px;
}
@media (max-width: 768px) {
  .home-spec__top {
    margin-bottom: 16px;
  }
}
.home-spec .container {
  position: relative;
}
@media (max-width: 768px) {
  .home-spec__title {
    padding: 0;
  }
}
.home-spec__more {
  margin-top: 24px;
  padding: 0 16px;
}
@media (max-width: 768px) {
  .home-spec__more {
    margin-top: 16px;
    width: 100%;
  }
  .home-spec .container--no-padding {
    display: flex;
    flex-direction: column;
  }
}
.home-spec__container {
  margin-top: 16px;
}
@media (max-width: 768px) {
  .home-spec__container {
    margin-top: 16px;
  }
}
.home-spec .nav-arrow-primary {
  top: 128px .home-spec .nav-arrow-primary --prev;
  top-left: 0;
}
.home-spec .nav-arrow-primary--next {
  right: 0;
}
.home-spec__items {
  margin: -12px;
  padding: 12px;
}
.home-spec__items .swiper-wrapper {
  align-items: stretch;
}
.home-spec__items .swiper-slide {
  height: auto;
}
.home-spec__items .card-primary {
  height: 100%;
}
.home-spec__items .card-agent {
  height: 100%;
}
@media (max-width: 768px) {
  .home-spec__items {
    margin: -16px;
    padding: 16px;
  }
}
.home-spec .tabs-primary__container {
  padding: 0;
  background-color: transparent;
  border-radius: 0;
}
.home-spec .tabs-primary__inner {
  margin-top: 0;
}
.home-spec .tabs-primary .tabs__body {
  position: relative;
}

@media (max-width: 768px) {
  .home-links .container {
    padding: 0;
  }
}
.home-links__items {
  margin-top: 24px;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(285px, 1fr));
  grid-column-gap: 24px;
  grid-row-gap: 16px;
}
@media (max-width: 1212px) {
  .home-links__items {
    grid-column-gap: 16px;
    margin-top: 16px;
  }
}

.home-dynamic__subtitle {
  margin-top: 16px;
}
.home-dynamic__descr {
  margin-top: 8px;
  color: var(--primaryTwo);
}
.home-dynamic__wrapper {
  margin-top: 24px;
  position: relative;
}
@media (min-width: 1213px) {
  .home-dynamic__wrapper::before {
    content: "";
    background-color: var(--primary100);
    position: absolute;
    width: 1px;
    height: 100%;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
  }
}
.home-dynamic__row {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-column-gap: 48px;
}
.home-dynamic__row:not(:first-child) {
  margin-top: 24px;
  padding-top: 24px;
  border-top: 1px solid var(--primary100);
}
@media (max-width: 1212px) {
  .home-dynamic__row {
    grid-template-columns: 100%;
  }
  .home-dynamic__col:not(:first-child) {
    margin-top: 24px;
    padding-top: 24px;
    border-top: 1px solid var(--primary100);
  }
}
.home-dynamic__rows {
  margin-top: 16px;
}
.home-dynamic__content {
  margin-top: 16px;
  display: flex;
  flex-direction: column;
  align-items: start;
  gap: 8px;
}
.home-dynamic .info-price-block {
  width: 100%;
}
.home-dynamic .dynamic-row__item:not(:last-child) {
  margin-bottom: 8px;
}
.home-dynamic__text {
  margin-top: 24px;
}
.home-dynamic__text p {
  color: var(--primaryTwo);
  margin-bottom: 16px;
}
.home-dynamic__text ol {
  margin-top: 8px;
}
.home-dynamic__text ol li {
  position: relative;
  counter-increment: inst;
  margin: 0 0 12px 19px;
}
.home-dynamic__text ol li::before {
  content: counter(inst) ". ";
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: -19px;
  font-weight: 500;
}
.home-dynamic__text ul {
  margin-top: 8px;
}
.home-dynamic__text ul li {
  margin: 0 0 12px 15px;
  position: relative;
}
.home-dynamic__text ul li::before {
  content: "";
  position: absolute;
  top: 7px;
  left: -15px;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background-color: currentColor;
}
.home-dynamic__more {
  display: block;
  margin-top: 24px;
  color: var(--blue);
}

.home-top {
  margin-top: 24px;
}
.home-top__container {
  padding: 24px 32px;
  box-shadow: var(--shadow-primary);
  border-radius: 16px;
  background-color: var(--white);
}
.home-top__services {
  margin-left: 152px;
  display: flex;
  flex-wrap: wrap;
  text-align: center;
  gap: 24px;
}
.home-top__services .service {
  max-width: 150px;
}
.home-top__wrapper {
  display: flex;
  align-items: start;
  width: 100%;
}
.home-top__image {
  flex-shrink: 0;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  overflow: hidden;
}
.home-top__image img {
  width: 100%;
  height: 100%;
}
.home-top__content {
  margin-left: 32px;
  flex-grow: 1;
}
.home-top__descr {
  margin-bottom: 32px;
  border-radius: 20px 20px 20px 4px;
  background-color: var(--white);
  border: 1px solid var(--primary200);
  padding: 16px;
}
.home-top__descr p {
  font-weight: 500;
}
.home-top__tags {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 12px;
}
.home-top__search {
  margin: 8px 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: transparent;
  border: 1px solid var(--primary200);
  padding: 0 16px;
  border-radius: 16px;
  height: 48px;
  transition: border 0.32s ease-in-out;
}
.home-top__search input {
  border: none;
  color: var(--primaryTwo);
  font-size: var(--default-fz);
  line-height: var(--default-lh);
  background-color: transparent;
  flex-grow: 1;
}
.home-top__search input::placeholder {
  color: inherit;
}
.home-top__search button {
  margin-left: 24px;
  width: 22px;
  height: 22px;
}
.home-top__search button svg {
  width: 100%;
  height: 100%;
  fill: none;
  stroke: var(--blue);
  stroke-width: 1.5px;
}

.service {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.service svg {
  width: 20px;
  height: 20px;
}
.service span {
  margin-top: 8px;
}

.faq__programs {
  margin-top: 24px;
}
.faq .documents-block {
  margin-top: 32px;
  padding: 32px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.faq .popular-instructions {
  margin-top: 32px;
  padding: 32px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
.faq .popular-instructions .swiper {
  padding: 16px;
  margin: 0 -16px;
}
.faq .faq-block {
  margin-top: 32px;
}
.faq .home-top {
  margin-top: 12px;
}

.faq-banner {
  display: flex;
  align-items: start;
  justify-content: space-between;
  gap: 32px;
}
.faq-banner__image {
  border-radius: 12px;
  overflow: hidden;
}
.faq-banner__image img {
  max-height: 300px;
}
.faq-banner__filter {
  margin-top: 24px;
}
.faq-banner__field:not(:last-child) {
  margin-bottom: 12px;
}

.faq-cards {
  padding: 32px;
  background-color: var(--white);
  box-shadow: var(--shadow-primary);
  border-radius: 12px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
